/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
  readonly url: Maybe<Scalars['String']>;
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'children'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid'
  | 'url';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageCropFocus =
  | 17
  | 0
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | ''
  | 'avif'
  | 'jpg'
  | ''
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly allStrapiComponentEvaluationEvaluation: STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection;
  readonly allStrapiComponentEvaluationEvaluationGroup: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection;
  readonly allStrapiComponentLinksLinks: STRAPI__COMPONENT_LINKS_LINKSConnection;
  readonly allStrapiExample: STRAPI_EXAMPLEConnection;
  readonly allStrapiExampleAwardTextnode: STRAPI_EXAMPLE_AWARD_TEXTNODEConnection;
  readonly allStrapiExampleDescriptionTextnode: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection;
  readonly allStrapiExampleRelatedofficeTextnode: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection;
  readonly allStrapiExampleStakeholdersTextnode: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection;
  readonly allStrapiMeasure: STRAPI_MEASUREConnection;
  readonly allStrapiMeasureDescriptionTextnode: STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection;
  readonly allStrapiMedia: STRAPI__MEDIAConnection;
  readonly allStrapiTopic: STRAPI_TOPICConnection;
  readonly allStrapiTopicDescriptionTextnode: STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
  readonly strapiComponentEvaluationEvaluation: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly strapiComponentEvaluationEvaluationGroup: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
  readonly strapiComponentLinksLinks: Maybe<STRAPI__COMPONENT_LINKS_LINKS>;
  readonly strapiExample: Maybe<STRAPI_EXAMPLE>;
  readonly strapiExampleAwardTextnode: Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
  readonly strapiExampleDescriptionTextnode: Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
  readonly strapiExampleRelatedofficeTextnode: Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
  readonly strapiExampleStakeholdersTextnode: Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
  readonly strapiMeasure: Maybe<STRAPI_MEASURE>;
  readonly strapiMeasureDescriptionTextnode: Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
  readonly strapiMedia: Maybe<STRAPI__MEDIA>;
  readonly strapiTopic: Maybe<STRAPI_TOPIC>;
  readonly strapiTopicDescriptionTextnode: Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_allStrapiComponentEvaluationEvaluationArgs = {
  filter: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONSortInput>;
};


type Query_allStrapiComponentEvaluationEvaluationGroupArgs = {
  filter: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPSortInput>;
};


type Query_allStrapiComponentLinksLinksArgs = {
  filter: InputMaybe<STRAPI__COMPONENT_LINKS_LINKSFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI__COMPONENT_LINKS_LINKSSortInput>;
};


type Query_allStrapiExampleArgs = {
  filter: InputMaybe<STRAPI_EXAMPLEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_EXAMPLESortInput>;
};


type Query_allStrapiExampleAwardTextnodeArgs = {
  filter: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODESortInput>;
};


type Query_allStrapiExampleDescriptionTextnodeArgs = {
  filter: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODESortInput>;
};


type Query_allStrapiExampleRelatedofficeTextnodeArgs = {
  filter: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODESortInput>;
};


type Query_allStrapiExampleStakeholdersTextnodeArgs = {
  filter: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODESortInput>;
};


type Query_allStrapiMeasureArgs = {
  filter: InputMaybe<STRAPI_MEASUREFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_MEASURESortInput>;
};


type Query_allStrapiMeasureDescriptionTextnodeArgs = {
  filter: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODESortInput>;
};


type Query_allStrapiMediaArgs = {
  filter: InputMaybe<STRAPI__MEDIAFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI__MEDIASortInput>;
};


type Query_allStrapiTopicArgs = {
  filter: InputMaybe<STRAPI_TOPICFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_TOPICSortInput>;
};


type Query_allStrapiTopicDescriptionTextnodeArgs = {
  filter: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODESortInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};


type Query_strapiComponentEvaluationEvaluationArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  percent: InputMaybe<IntQueryOperatorInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
};


type Query_strapiComponentEvaluationEvaluationGroupArgs = {
  accessibility: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  effectiveness: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  effort: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  evaluability: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  execution: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  participation: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  portability: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  synergies: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
};


type Query_strapiComponentLinksLinksArgs = {
  children: InputMaybe<NodeFilterListInput>;
  display: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
};


type Query_strapiExampleArgs = {
  award: InputMaybe<STRAPI_EXAMPLEAwardFilterInput>;
  childStrapiExampleAwardTextnode: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput>;
  childStrapiExampleDescriptionTextnode: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput>;
  childStrapiExampleRelatedofficeTextnode: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput>;
  childStrapiExampleStakeholdersTextnode: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenStrapiExampleAwardTextnode: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterListInput>;
  childrenStrapiExampleDescriptionTextnode: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterListInput>;
  childrenStrapiExampleRelatedofficeTextnode: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterListInput>;
  childrenStrapiExampleStakeholdersTextnode: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterListInput>;
  commune: InputMaybe<StringQueryOperatorInput>;
  countryState: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<STRAPI_EXAMPLEDescriptionFilterInput>;
  evaluation: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFilterInput>;
  funding: InputMaybe<StringQueryOperatorInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<STRAPI__MEDIAFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  links: InputMaybe<STRAPI__COMPONENT_LINKS_LINKSFilterListInput>;
  localChallanges: InputMaybe<StringQueryOperatorInput>;
  measure: InputMaybe<STRAPI_MEASUREFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  period: InputMaybe<StringQueryOperatorInput>;
  population: InputMaybe<StringQueryOperatorInput>;
  publishedAt: InputMaybe<DateQueryOperatorInput>;
  relatedOffice: InputMaybe<STRAPI_EXAMPLERelatedOfficeFilterInput>;
  shortDescription: InputMaybe<StringQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spatialStructure: InputMaybe<StringQueryOperatorInput>;
  stakeholders: InputMaybe<STRAPI_EXAMPLEStakeholdersFilterInput>;
  state: InputMaybe<StringQueryOperatorInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  targetGroup: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_strapiExampleAwardTextnodeArgs = {
  award: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_strapiExampleDescriptionTextnodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_strapiExampleRelatedofficeTextnodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  relatedOffice: InputMaybe<StringQueryOperatorInput>;
};


type Query_strapiExampleStakeholdersTextnodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  stakeholders: InputMaybe<StringQueryOperatorInput>;
};


type Query_strapiMeasureArgs = {
  childStrapiMeasureDescriptionTextnode: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenStrapiMeasureDescriptionTextnode: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterListInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<STRAPI_MEASUREDescriptionFilterInput>;
  examples: InputMaybe<STRAPI_EXAMPLEFilterListInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<STRAPI__MEDIAFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<DateQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  topic: InputMaybe<STRAPI_TOPICFilterInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_strapiMeasureDescriptionTextnodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_strapiMediaArgs = {
  alternativeText: InputMaybe<StringQueryOperatorInput>;
  caption: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  formats: InputMaybe<STRAPI__MEDIAFormatsFilterInput>;
  hash: InputMaybe<StringQueryOperatorInput>;
  height: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  localFile: InputMaybe<FileFilterInput>;
  mime: InputMaybe<StringQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  size: InputMaybe<FloatQueryOperatorInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
  width: InputMaybe<IntQueryOperatorInput>;
};


type Query_strapiTopicArgs = {
  childStrapiTopicDescriptionTextnode: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenStrapiTopicDescriptionTextnode: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterListInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<STRAPI_TOPICDescriptionFilterInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<STRAPI__MEDIAFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  measures: InputMaybe<STRAPI_MEASUREFilterListInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  publishedAt: InputMaybe<DateQueryOperatorInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  strapi_id: InputMaybe<IntQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_strapiTopicDescriptionTextnodeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};

type STRAPI_EXAMPLE = Node & {
  readonly award: Maybe<STRAPI_EXAMPLEAward>;
  /** Returns the first child node of type STRAPI_EXAMPLE_AWARD_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiExampleAwardTextnode: Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
  /** Returns the first child node of type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiExampleDescriptionTextnode: Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
  /** Returns the first child node of type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiExampleRelatedofficeTextnode: Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
  /** Returns the first child node of type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiExampleStakeholdersTextnode: Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type STRAPI_EXAMPLE_AWARD_TEXTNODE */
  readonly childrenStrapiExampleAwardTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>>>;
  /** Returns all children nodes filtered by type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE */
  readonly childrenStrapiExampleDescriptionTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>>>;
  /** Returns all children nodes filtered by type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE */
  readonly childrenStrapiExampleRelatedofficeTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>>>;
  /** Returns all children nodes filtered by type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE */
  readonly childrenStrapiExampleStakeholdersTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>>>;
  readonly commune: Maybe<Scalars['String']>;
  readonly countryState: Maybe<Scalars['String']>;
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly description: Maybe<STRAPI_EXAMPLEDescription>;
  readonly evaluation: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
  readonly funding: Maybe<Scalars['String']>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<STRAPI__MEDIA>;
  readonly internal: Internal;
  readonly links: Maybe<ReadonlyArray<Maybe<STRAPI__COMPONENT_LINKS_LINKS>>>;
  readonly localChallanges: Maybe<Scalars['String']>;
  readonly measure: Maybe<STRAPI_MEASURE>;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly period: Maybe<Scalars['String']>;
  readonly population: Maybe<Scalars['String']>;
  readonly publishedAt: Maybe<Scalars['Date']>;
  readonly relatedOffice: Maybe<STRAPI_EXAMPLERelatedOffice>;
  readonly shortDescription: Maybe<Scalars['String']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spatialStructure: Maybe<Scalars['String']>;
  readonly stakeholders: Maybe<STRAPI_EXAMPLEStakeholders>;
  readonly state: Maybe<Scalars['String']>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly targetGroup: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type STRAPI_EXAMPLE_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_EXAMPLE_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};


type STRAPI_EXAMPLE_publishedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_EXAMPLE_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type STRAPI_EXAMPLEAward = {
  readonly data: Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
};

type STRAPI_EXAMPLEAwardFilterInput = {
  readonly data: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLEEdge>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLEConnection_distinctArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEConnection_groupArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLEConnection_maxArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEConnection_minArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEConnection_sumArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};

type STRAPI_EXAMPLEDescription = {
  readonly data: Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
};

type STRAPI_EXAMPLEDescriptionFilterInput = {
  readonly data: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLEEdge = {
  readonly next: Maybe<STRAPI_EXAMPLE>;
  readonly node: STRAPI_EXAMPLE;
  readonly previous: Maybe<STRAPI_EXAMPLE>;
};

type STRAPI_EXAMPLEFieldsEnum =
  | 'award.data.award'
  | 'award.data.children'
  | 'award.data.children.children'
  | 'award.data.children.id'
  | 'award.data.id'
  | 'award.data.internal.content'
  | 'award.data.internal.contentDigest'
  | 'award.data.internal.description'
  | 'award.data.internal.fieldOwners'
  | 'award.data.internal.ignoreType'
  | 'award.data.internal.mediaType'
  | 'award.data.internal.owner'
  | 'award.data.internal.type'
  | 'award.data.parent.children'
  | 'award.data.parent.id'
  | 'childStrapiExampleAwardTextnode.award'
  | 'childStrapiExampleAwardTextnode.children'
  | 'childStrapiExampleAwardTextnode.children.children'
  | 'childStrapiExampleAwardTextnode.children.children.children'
  | 'childStrapiExampleAwardTextnode.children.children.id'
  | 'childStrapiExampleAwardTextnode.children.id'
  | 'childStrapiExampleAwardTextnode.children.internal.content'
  | 'childStrapiExampleAwardTextnode.children.internal.contentDigest'
  | 'childStrapiExampleAwardTextnode.children.internal.description'
  | 'childStrapiExampleAwardTextnode.children.internal.fieldOwners'
  | 'childStrapiExampleAwardTextnode.children.internal.ignoreType'
  | 'childStrapiExampleAwardTextnode.children.internal.mediaType'
  | 'childStrapiExampleAwardTextnode.children.internal.owner'
  | 'childStrapiExampleAwardTextnode.children.internal.type'
  | 'childStrapiExampleAwardTextnode.children.parent.children'
  | 'childStrapiExampleAwardTextnode.children.parent.id'
  | 'childStrapiExampleAwardTextnode.id'
  | 'childStrapiExampleAwardTextnode.internal.content'
  | 'childStrapiExampleAwardTextnode.internal.contentDigest'
  | 'childStrapiExampleAwardTextnode.internal.description'
  | 'childStrapiExampleAwardTextnode.internal.fieldOwners'
  | 'childStrapiExampleAwardTextnode.internal.ignoreType'
  | 'childStrapiExampleAwardTextnode.internal.mediaType'
  | 'childStrapiExampleAwardTextnode.internal.owner'
  | 'childStrapiExampleAwardTextnode.internal.type'
  | 'childStrapiExampleAwardTextnode.parent.children'
  | 'childStrapiExampleAwardTextnode.parent.children.children'
  | 'childStrapiExampleAwardTextnode.parent.children.id'
  | 'childStrapiExampleAwardTextnode.parent.id'
  | 'childStrapiExampleAwardTextnode.parent.internal.content'
  | 'childStrapiExampleAwardTextnode.parent.internal.contentDigest'
  | 'childStrapiExampleAwardTextnode.parent.internal.description'
  | 'childStrapiExampleAwardTextnode.parent.internal.fieldOwners'
  | 'childStrapiExampleAwardTextnode.parent.internal.ignoreType'
  | 'childStrapiExampleAwardTextnode.parent.internal.mediaType'
  | 'childStrapiExampleAwardTextnode.parent.internal.owner'
  | 'childStrapiExampleAwardTextnode.parent.internal.type'
  | 'childStrapiExampleAwardTextnode.parent.parent.children'
  | 'childStrapiExampleAwardTextnode.parent.parent.id'
  | 'childStrapiExampleDescriptionTextnode.children'
  | 'childStrapiExampleDescriptionTextnode.children.children'
  | 'childStrapiExampleDescriptionTextnode.children.children.children'
  | 'childStrapiExampleDescriptionTextnode.children.children.id'
  | 'childStrapiExampleDescriptionTextnode.children.id'
  | 'childStrapiExampleDescriptionTextnode.children.internal.content'
  | 'childStrapiExampleDescriptionTextnode.children.internal.contentDigest'
  | 'childStrapiExampleDescriptionTextnode.children.internal.description'
  | 'childStrapiExampleDescriptionTextnode.children.internal.fieldOwners'
  | 'childStrapiExampleDescriptionTextnode.children.internal.ignoreType'
  | 'childStrapiExampleDescriptionTextnode.children.internal.mediaType'
  | 'childStrapiExampleDescriptionTextnode.children.internal.owner'
  | 'childStrapiExampleDescriptionTextnode.children.internal.type'
  | 'childStrapiExampleDescriptionTextnode.children.parent.children'
  | 'childStrapiExampleDescriptionTextnode.children.parent.id'
  | 'childStrapiExampleDescriptionTextnode.description'
  | 'childStrapiExampleDescriptionTextnode.id'
  | 'childStrapiExampleDescriptionTextnode.internal.content'
  | 'childStrapiExampleDescriptionTextnode.internal.contentDigest'
  | 'childStrapiExampleDescriptionTextnode.internal.description'
  | 'childStrapiExampleDescriptionTextnode.internal.fieldOwners'
  | 'childStrapiExampleDescriptionTextnode.internal.ignoreType'
  | 'childStrapiExampleDescriptionTextnode.internal.mediaType'
  | 'childStrapiExampleDescriptionTextnode.internal.owner'
  | 'childStrapiExampleDescriptionTextnode.internal.type'
  | 'childStrapiExampleDescriptionTextnode.parent.children'
  | 'childStrapiExampleDescriptionTextnode.parent.children.children'
  | 'childStrapiExampleDescriptionTextnode.parent.children.id'
  | 'childStrapiExampleDescriptionTextnode.parent.id'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.content'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.contentDigest'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.description'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.fieldOwners'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.ignoreType'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.mediaType'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.owner'
  | 'childStrapiExampleDescriptionTextnode.parent.internal.type'
  | 'childStrapiExampleDescriptionTextnode.parent.parent.children'
  | 'childStrapiExampleDescriptionTextnode.parent.parent.id'
  | 'childStrapiExampleRelatedofficeTextnode.children'
  | 'childStrapiExampleRelatedofficeTextnode.children.children'
  | 'childStrapiExampleRelatedofficeTextnode.children.children.children'
  | 'childStrapiExampleRelatedofficeTextnode.children.children.id'
  | 'childStrapiExampleRelatedofficeTextnode.children.id'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.content'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.contentDigest'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.description'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.fieldOwners'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.ignoreType'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.mediaType'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.owner'
  | 'childStrapiExampleRelatedofficeTextnode.children.internal.type'
  | 'childStrapiExampleRelatedofficeTextnode.children.parent.children'
  | 'childStrapiExampleRelatedofficeTextnode.children.parent.id'
  | 'childStrapiExampleRelatedofficeTextnode.id'
  | 'childStrapiExampleRelatedofficeTextnode.internal.content'
  | 'childStrapiExampleRelatedofficeTextnode.internal.contentDigest'
  | 'childStrapiExampleRelatedofficeTextnode.internal.description'
  | 'childStrapiExampleRelatedofficeTextnode.internal.fieldOwners'
  | 'childStrapiExampleRelatedofficeTextnode.internal.ignoreType'
  | 'childStrapiExampleRelatedofficeTextnode.internal.mediaType'
  | 'childStrapiExampleRelatedofficeTextnode.internal.owner'
  | 'childStrapiExampleRelatedofficeTextnode.internal.type'
  | 'childStrapiExampleRelatedofficeTextnode.parent.children'
  | 'childStrapiExampleRelatedofficeTextnode.parent.children.children'
  | 'childStrapiExampleRelatedofficeTextnode.parent.children.id'
  | 'childStrapiExampleRelatedofficeTextnode.parent.id'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.content'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.contentDigest'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.description'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.fieldOwners'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.ignoreType'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.mediaType'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.owner'
  | 'childStrapiExampleRelatedofficeTextnode.parent.internal.type'
  | 'childStrapiExampleRelatedofficeTextnode.parent.parent.children'
  | 'childStrapiExampleRelatedofficeTextnode.parent.parent.id'
  | 'childStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'childStrapiExampleStakeholdersTextnode.children'
  | 'childStrapiExampleStakeholdersTextnode.children.children'
  | 'childStrapiExampleStakeholdersTextnode.children.children.children'
  | 'childStrapiExampleStakeholdersTextnode.children.children.id'
  | 'childStrapiExampleStakeholdersTextnode.children.id'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.content'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.contentDigest'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.description'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.fieldOwners'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.ignoreType'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.mediaType'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.owner'
  | 'childStrapiExampleStakeholdersTextnode.children.internal.type'
  | 'childStrapiExampleStakeholdersTextnode.children.parent.children'
  | 'childStrapiExampleStakeholdersTextnode.children.parent.id'
  | 'childStrapiExampleStakeholdersTextnode.id'
  | 'childStrapiExampleStakeholdersTextnode.internal.content'
  | 'childStrapiExampleStakeholdersTextnode.internal.contentDigest'
  | 'childStrapiExampleStakeholdersTextnode.internal.description'
  | 'childStrapiExampleStakeholdersTextnode.internal.fieldOwners'
  | 'childStrapiExampleStakeholdersTextnode.internal.ignoreType'
  | 'childStrapiExampleStakeholdersTextnode.internal.mediaType'
  | 'childStrapiExampleStakeholdersTextnode.internal.owner'
  | 'childStrapiExampleStakeholdersTextnode.internal.type'
  | 'childStrapiExampleStakeholdersTextnode.parent.children'
  | 'childStrapiExampleStakeholdersTextnode.parent.children.children'
  | 'childStrapiExampleStakeholdersTextnode.parent.children.id'
  | 'childStrapiExampleStakeholdersTextnode.parent.id'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.content'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.contentDigest'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.description'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.fieldOwners'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.ignoreType'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.mediaType'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.owner'
  | 'childStrapiExampleStakeholdersTextnode.parent.internal.type'
  | 'childStrapiExampleStakeholdersTextnode.parent.parent.children'
  | 'childStrapiExampleStakeholdersTextnode.parent.parent.id'
  | 'childStrapiExampleStakeholdersTextnode.stakeholders'
  | 'children'
  | 'childrenStrapiExampleAwardTextnode'
  | 'childrenStrapiExampleAwardTextnode.award'
  | 'childrenStrapiExampleAwardTextnode.children'
  | 'childrenStrapiExampleAwardTextnode.children.children'
  | 'childrenStrapiExampleAwardTextnode.children.children.children'
  | 'childrenStrapiExampleAwardTextnode.children.children.id'
  | 'childrenStrapiExampleAwardTextnode.children.id'
  | 'childrenStrapiExampleAwardTextnode.children.internal.content'
  | 'childrenStrapiExampleAwardTextnode.children.internal.contentDigest'
  | 'childrenStrapiExampleAwardTextnode.children.internal.description'
  | 'childrenStrapiExampleAwardTextnode.children.internal.fieldOwners'
  | 'childrenStrapiExampleAwardTextnode.children.internal.ignoreType'
  | 'childrenStrapiExampleAwardTextnode.children.internal.mediaType'
  | 'childrenStrapiExampleAwardTextnode.children.internal.owner'
  | 'childrenStrapiExampleAwardTextnode.children.internal.type'
  | 'childrenStrapiExampleAwardTextnode.children.parent.children'
  | 'childrenStrapiExampleAwardTextnode.children.parent.id'
  | 'childrenStrapiExampleAwardTextnode.id'
  | 'childrenStrapiExampleAwardTextnode.internal.content'
  | 'childrenStrapiExampleAwardTextnode.internal.contentDigest'
  | 'childrenStrapiExampleAwardTextnode.internal.description'
  | 'childrenStrapiExampleAwardTextnode.internal.fieldOwners'
  | 'childrenStrapiExampleAwardTextnode.internal.ignoreType'
  | 'childrenStrapiExampleAwardTextnode.internal.mediaType'
  | 'childrenStrapiExampleAwardTextnode.internal.owner'
  | 'childrenStrapiExampleAwardTextnode.internal.type'
  | 'childrenStrapiExampleAwardTextnode.parent.children'
  | 'childrenStrapiExampleAwardTextnode.parent.children.children'
  | 'childrenStrapiExampleAwardTextnode.parent.children.id'
  | 'childrenStrapiExampleAwardTextnode.parent.id'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.content'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.contentDigest'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.description'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.ignoreType'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.mediaType'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.owner'
  | 'childrenStrapiExampleAwardTextnode.parent.internal.type'
  | 'childrenStrapiExampleAwardTextnode.parent.parent.children'
  | 'childrenStrapiExampleAwardTextnode.parent.parent.id'
  | 'childrenStrapiExampleDescriptionTextnode'
  | 'childrenStrapiExampleDescriptionTextnode.children'
  | 'childrenStrapiExampleDescriptionTextnode.children.children'
  | 'childrenStrapiExampleDescriptionTextnode.children.children.children'
  | 'childrenStrapiExampleDescriptionTextnode.children.children.id'
  | 'childrenStrapiExampleDescriptionTextnode.children.id'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.content'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.contentDigest'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.description'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.fieldOwners'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.ignoreType'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.mediaType'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.owner'
  | 'childrenStrapiExampleDescriptionTextnode.children.internal.type'
  | 'childrenStrapiExampleDescriptionTextnode.children.parent.children'
  | 'childrenStrapiExampleDescriptionTextnode.children.parent.id'
  | 'childrenStrapiExampleDescriptionTextnode.description'
  | 'childrenStrapiExampleDescriptionTextnode.id'
  | 'childrenStrapiExampleDescriptionTextnode.internal.content'
  | 'childrenStrapiExampleDescriptionTextnode.internal.contentDigest'
  | 'childrenStrapiExampleDescriptionTextnode.internal.description'
  | 'childrenStrapiExampleDescriptionTextnode.internal.fieldOwners'
  | 'childrenStrapiExampleDescriptionTextnode.internal.ignoreType'
  | 'childrenStrapiExampleDescriptionTextnode.internal.mediaType'
  | 'childrenStrapiExampleDescriptionTextnode.internal.owner'
  | 'childrenStrapiExampleDescriptionTextnode.internal.type'
  | 'childrenStrapiExampleDescriptionTextnode.parent.children'
  | 'childrenStrapiExampleDescriptionTextnode.parent.children.children'
  | 'childrenStrapiExampleDescriptionTextnode.parent.children.id'
  | 'childrenStrapiExampleDescriptionTextnode.parent.id'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.content'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.contentDigest'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.description'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.ignoreType'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.mediaType'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.owner'
  | 'childrenStrapiExampleDescriptionTextnode.parent.internal.type'
  | 'childrenStrapiExampleDescriptionTextnode.parent.parent.children'
  | 'childrenStrapiExampleDescriptionTextnode.parent.parent.id'
  | 'childrenStrapiExampleRelatedofficeTextnode'
  | 'childrenStrapiExampleRelatedofficeTextnode.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.children.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.children.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.content'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.contentDigest'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.description'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.fieldOwners'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.ignoreType'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.mediaType'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.owner'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.internal.type'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.parent.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.children.parent.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.content'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.contentDigest'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.description'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.fieldOwners'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.ignoreType'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.mediaType'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.owner'
  | 'childrenStrapiExampleRelatedofficeTextnode.internal.type'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.children.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.children.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.content'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.contentDigest'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.description'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.ignoreType'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.mediaType'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.owner'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.internal.type'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.parent.children'
  | 'childrenStrapiExampleRelatedofficeTextnode.parent.parent.id'
  | 'childrenStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'childrenStrapiExampleStakeholdersTextnode'
  | 'childrenStrapiExampleStakeholdersTextnode.children'
  | 'childrenStrapiExampleStakeholdersTextnode.children.children'
  | 'childrenStrapiExampleStakeholdersTextnode.children.children.children'
  | 'childrenStrapiExampleStakeholdersTextnode.children.children.id'
  | 'childrenStrapiExampleStakeholdersTextnode.children.id'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.content'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.contentDigest'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.description'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.fieldOwners'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.ignoreType'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.mediaType'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.owner'
  | 'childrenStrapiExampleStakeholdersTextnode.children.internal.type'
  | 'childrenStrapiExampleStakeholdersTextnode.children.parent.children'
  | 'childrenStrapiExampleStakeholdersTextnode.children.parent.id'
  | 'childrenStrapiExampleStakeholdersTextnode.id'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.content'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.contentDigest'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.description'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.fieldOwners'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.ignoreType'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.mediaType'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.owner'
  | 'childrenStrapiExampleStakeholdersTextnode.internal.type'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.children'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.children.children'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.children.id'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.id'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.content'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.contentDigest'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.description'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.ignoreType'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.mediaType'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.owner'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.internal.type'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.parent.children'
  | 'childrenStrapiExampleStakeholdersTextnode.parent.parent.id'
  | 'childrenStrapiExampleStakeholdersTextnode.stakeholders'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'commune'
  | 'countryState'
  | 'createdAt'
  | 'description.data.children'
  | 'description.data.children.children'
  | 'description.data.children.id'
  | 'description.data.description'
  | 'description.data.id'
  | 'description.data.internal.content'
  | 'description.data.internal.contentDigest'
  | 'description.data.internal.description'
  | 'description.data.internal.fieldOwners'
  | 'description.data.internal.ignoreType'
  | 'description.data.internal.mediaType'
  | 'description.data.internal.owner'
  | 'description.data.internal.type'
  | 'description.data.parent.children'
  | 'description.data.parent.id'
  | 'evaluation.accessibility.children'
  | 'evaluation.accessibility.children.children'
  | 'evaluation.accessibility.children.id'
  | 'evaluation.accessibility.description'
  | 'evaluation.accessibility.id'
  | 'evaluation.accessibility.internal.content'
  | 'evaluation.accessibility.internal.contentDigest'
  | 'evaluation.accessibility.internal.description'
  | 'evaluation.accessibility.internal.fieldOwners'
  | 'evaluation.accessibility.internal.ignoreType'
  | 'evaluation.accessibility.internal.mediaType'
  | 'evaluation.accessibility.internal.owner'
  | 'evaluation.accessibility.internal.type'
  | 'evaluation.accessibility.parent.children'
  | 'evaluation.accessibility.parent.id'
  | 'evaluation.accessibility.percent'
  | 'evaluation.accessibility.strapi_id'
  | 'evaluation.children'
  | 'evaluation.children.children'
  | 'evaluation.children.children.children'
  | 'evaluation.children.children.id'
  | 'evaluation.children.id'
  | 'evaluation.children.internal.content'
  | 'evaluation.children.internal.contentDigest'
  | 'evaluation.children.internal.description'
  | 'evaluation.children.internal.fieldOwners'
  | 'evaluation.children.internal.ignoreType'
  | 'evaluation.children.internal.mediaType'
  | 'evaluation.children.internal.owner'
  | 'evaluation.children.internal.type'
  | 'evaluation.children.parent.children'
  | 'evaluation.children.parent.id'
  | 'evaluation.effectiveness.children'
  | 'evaluation.effectiveness.children.children'
  | 'evaluation.effectiveness.children.id'
  | 'evaluation.effectiveness.description'
  | 'evaluation.effectiveness.id'
  | 'evaluation.effectiveness.internal.content'
  | 'evaluation.effectiveness.internal.contentDigest'
  | 'evaluation.effectiveness.internal.description'
  | 'evaluation.effectiveness.internal.fieldOwners'
  | 'evaluation.effectiveness.internal.ignoreType'
  | 'evaluation.effectiveness.internal.mediaType'
  | 'evaluation.effectiveness.internal.owner'
  | 'evaluation.effectiveness.internal.type'
  | 'evaluation.effectiveness.parent.children'
  | 'evaluation.effectiveness.parent.id'
  | 'evaluation.effectiveness.percent'
  | 'evaluation.effectiveness.strapi_id'
  | 'evaluation.effort.children'
  | 'evaluation.effort.children.children'
  | 'evaluation.effort.children.id'
  | 'evaluation.effort.description'
  | 'evaluation.effort.id'
  | 'evaluation.effort.internal.content'
  | 'evaluation.effort.internal.contentDigest'
  | 'evaluation.effort.internal.description'
  | 'evaluation.effort.internal.fieldOwners'
  | 'evaluation.effort.internal.ignoreType'
  | 'evaluation.effort.internal.mediaType'
  | 'evaluation.effort.internal.owner'
  | 'evaluation.effort.internal.type'
  | 'evaluation.effort.parent.children'
  | 'evaluation.effort.parent.id'
  | 'evaluation.effort.percent'
  | 'evaluation.effort.strapi_id'
  | 'evaluation.evaluability.children'
  | 'evaluation.evaluability.children.children'
  | 'evaluation.evaluability.children.id'
  | 'evaluation.evaluability.description'
  | 'evaluation.evaluability.id'
  | 'evaluation.evaluability.internal.content'
  | 'evaluation.evaluability.internal.contentDigest'
  | 'evaluation.evaluability.internal.description'
  | 'evaluation.evaluability.internal.fieldOwners'
  | 'evaluation.evaluability.internal.ignoreType'
  | 'evaluation.evaluability.internal.mediaType'
  | 'evaluation.evaluability.internal.owner'
  | 'evaluation.evaluability.internal.type'
  | 'evaluation.evaluability.parent.children'
  | 'evaluation.evaluability.parent.id'
  | 'evaluation.evaluability.percent'
  | 'evaluation.evaluability.strapi_id'
  | 'evaluation.execution.children'
  | 'evaluation.execution.children.children'
  | 'evaluation.execution.children.id'
  | 'evaluation.execution.description'
  | 'evaluation.execution.id'
  | 'evaluation.execution.internal.content'
  | 'evaluation.execution.internal.contentDigest'
  | 'evaluation.execution.internal.description'
  | 'evaluation.execution.internal.fieldOwners'
  | 'evaluation.execution.internal.ignoreType'
  | 'evaluation.execution.internal.mediaType'
  | 'evaluation.execution.internal.owner'
  | 'evaluation.execution.internal.type'
  | 'evaluation.execution.parent.children'
  | 'evaluation.execution.parent.id'
  | 'evaluation.execution.percent'
  | 'evaluation.execution.strapi_id'
  | 'evaluation.id'
  | 'evaluation.internal.content'
  | 'evaluation.internal.contentDigest'
  | 'evaluation.internal.description'
  | 'evaluation.internal.fieldOwners'
  | 'evaluation.internal.ignoreType'
  | 'evaluation.internal.mediaType'
  | 'evaluation.internal.owner'
  | 'evaluation.internal.type'
  | 'evaluation.parent.children'
  | 'evaluation.parent.children.children'
  | 'evaluation.parent.children.id'
  | 'evaluation.parent.id'
  | 'evaluation.parent.internal.content'
  | 'evaluation.parent.internal.contentDigest'
  | 'evaluation.parent.internal.description'
  | 'evaluation.parent.internal.fieldOwners'
  | 'evaluation.parent.internal.ignoreType'
  | 'evaluation.parent.internal.mediaType'
  | 'evaluation.parent.internal.owner'
  | 'evaluation.parent.internal.type'
  | 'evaluation.parent.parent.children'
  | 'evaluation.parent.parent.id'
  | 'evaluation.participation.children'
  | 'evaluation.participation.children.children'
  | 'evaluation.participation.children.id'
  | 'evaluation.participation.description'
  | 'evaluation.participation.id'
  | 'evaluation.participation.internal.content'
  | 'evaluation.participation.internal.contentDigest'
  | 'evaluation.participation.internal.description'
  | 'evaluation.participation.internal.fieldOwners'
  | 'evaluation.participation.internal.ignoreType'
  | 'evaluation.participation.internal.mediaType'
  | 'evaluation.participation.internal.owner'
  | 'evaluation.participation.internal.type'
  | 'evaluation.participation.parent.children'
  | 'evaluation.participation.parent.id'
  | 'evaluation.participation.percent'
  | 'evaluation.participation.strapi_id'
  | 'evaluation.portability.children'
  | 'evaluation.portability.children.children'
  | 'evaluation.portability.children.id'
  | 'evaluation.portability.description'
  | 'evaluation.portability.id'
  | 'evaluation.portability.internal.content'
  | 'evaluation.portability.internal.contentDigest'
  | 'evaluation.portability.internal.description'
  | 'evaluation.portability.internal.fieldOwners'
  | 'evaluation.portability.internal.ignoreType'
  | 'evaluation.portability.internal.mediaType'
  | 'evaluation.portability.internal.owner'
  | 'evaluation.portability.internal.type'
  | 'evaluation.portability.parent.children'
  | 'evaluation.portability.parent.id'
  | 'evaluation.portability.percent'
  | 'evaluation.portability.strapi_id'
  | 'evaluation.strapi_id'
  | 'evaluation.synergies.children'
  | 'evaluation.synergies.children.children'
  | 'evaluation.synergies.children.id'
  | 'evaluation.synergies.description'
  | 'evaluation.synergies.id'
  | 'evaluation.synergies.internal.content'
  | 'evaluation.synergies.internal.contentDigest'
  | 'evaluation.synergies.internal.description'
  | 'evaluation.synergies.internal.fieldOwners'
  | 'evaluation.synergies.internal.ignoreType'
  | 'evaluation.synergies.internal.mediaType'
  | 'evaluation.synergies.internal.owner'
  | 'evaluation.synergies.internal.type'
  | 'evaluation.synergies.parent.children'
  | 'evaluation.synergies.parent.id'
  | 'evaluation.synergies.percent'
  | 'evaluation.synergies.strapi_id'
  | 'funding'
  | 'gatsbyPath'
  | 'id'
  | 'image.alternativeText'
  | 'image.caption'
  | 'image.children'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.createdAt'
  | 'image.ext'
  | 'image.formats.small.ext'
  | 'image.formats.small.hash'
  | 'image.formats.small.height'
  | 'image.formats.small.mime'
  | 'image.formats.small.name'
  | 'image.formats.small.size'
  | 'image.formats.small.url'
  | 'image.formats.small.width'
  | 'image.formats.thumbnail.ext'
  | 'image.formats.thumbnail.hash'
  | 'image.formats.thumbnail.height'
  | 'image.formats.thumbnail.mime'
  | 'image.formats.thumbnail.name'
  | 'image.formats.thumbnail.size'
  | 'image.formats.thumbnail.url'
  | 'image.formats.thumbnail.width'
  | 'image.hash'
  | 'image.height'
  | 'image.id'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.localFile.absolutePath'
  | 'image.localFile.accessTime'
  | 'image.localFile.atime'
  | 'image.localFile.atimeMs'
  | 'image.localFile.base'
  | 'image.localFile.birthTime'
  | 'image.localFile.birthtime'
  | 'image.localFile.birthtimeMs'
  | 'image.localFile.blksize'
  | 'image.localFile.blocks'
  | 'image.localFile.changeTime'
  | 'image.localFile.childImageSharp.children'
  | 'image.localFile.childImageSharp.gatsbyImageData'
  | 'image.localFile.childImageSharp.id'
  | 'image.localFile.children'
  | 'image.localFile.childrenImageSharp'
  | 'image.localFile.childrenImageSharp.children'
  | 'image.localFile.childrenImageSharp.gatsbyImageData'
  | 'image.localFile.childrenImageSharp.id'
  | 'image.localFile.children.children'
  | 'image.localFile.children.id'
  | 'image.localFile.ctime'
  | 'image.localFile.ctimeMs'
  | 'image.localFile.dev'
  | 'image.localFile.dir'
  | 'image.localFile.ext'
  | 'image.localFile.extension'
  | 'image.localFile.gid'
  | 'image.localFile.id'
  | 'image.localFile.ino'
  | 'image.localFile.internal.content'
  | 'image.localFile.internal.contentDigest'
  | 'image.localFile.internal.description'
  | 'image.localFile.internal.fieldOwners'
  | 'image.localFile.internal.ignoreType'
  | 'image.localFile.internal.mediaType'
  | 'image.localFile.internal.owner'
  | 'image.localFile.internal.type'
  | 'image.localFile.mode'
  | 'image.localFile.modifiedTime'
  | 'image.localFile.mtime'
  | 'image.localFile.mtimeMs'
  | 'image.localFile.name'
  | 'image.localFile.nlink'
  | 'image.localFile.parent.children'
  | 'image.localFile.parent.id'
  | 'image.localFile.prettySize'
  | 'image.localFile.rdev'
  | 'image.localFile.relativeDirectory'
  | 'image.localFile.relativePath'
  | 'image.localFile.root'
  | 'image.localFile.size'
  | 'image.localFile.sourceInstanceName'
  | 'image.localFile.uid'
  | 'image.localFile.url'
  | 'image.mime'
  | 'image.name'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.size'
  | 'image.strapi_id'
  | 'image.updatedAt'
  | 'image.url'
  | 'image.width'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'links'
  | 'links.children'
  | 'links.children.children'
  | 'links.children.children.children'
  | 'links.children.children.id'
  | 'links.children.id'
  | 'links.children.internal.content'
  | 'links.children.internal.contentDigest'
  | 'links.children.internal.description'
  | 'links.children.internal.fieldOwners'
  | 'links.children.internal.ignoreType'
  | 'links.children.internal.mediaType'
  | 'links.children.internal.owner'
  | 'links.children.internal.type'
  | 'links.children.parent.children'
  | 'links.children.parent.id'
  | 'links.display'
  | 'links.id'
  | 'links.internal.content'
  | 'links.internal.contentDigest'
  | 'links.internal.description'
  | 'links.internal.fieldOwners'
  | 'links.internal.ignoreType'
  | 'links.internal.mediaType'
  | 'links.internal.owner'
  | 'links.internal.type'
  | 'links.parent.children'
  | 'links.parent.children.children'
  | 'links.parent.children.id'
  | 'links.parent.id'
  | 'links.parent.internal.content'
  | 'links.parent.internal.contentDigest'
  | 'links.parent.internal.description'
  | 'links.parent.internal.fieldOwners'
  | 'links.parent.internal.ignoreType'
  | 'links.parent.internal.mediaType'
  | 'links.parent.internal.owner'
  | 'links.parent.internal.type'
  | 'links.parent.parent.children'
  | 'links.parent.parent.id'
  | 'links.strapi_id'
  | 'links.url'
  | 'localChallanges'
  | 'measure.childStrapiMeasureDescriptionTextnode.children'
  | 'measure.childStrapiMeasureDescriptionTextnode.children.children'
  | 'measure.childStrapiMeasureDescriptionTextnode.children.id'
  | 'measure.childStrapiMeasureDescriptionTextnode.description'
  | 'measure.childStrapiMeasureDescriptionTextnode.id'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.content'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.description'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.owner'
  | 'measure.childStrapiMeasureDescriptionTextnode.internal.type'
  | 'measure.childStrapiMeasureDescriptionTextnode.parent.children'
  | 'measure.childStrapiMeasureDescriptionTextnode.parent.id'
  | 'measure.children'
  | 'measure.childrenStrapiMeasureDescriptionTextnode'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.children'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.children.children'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.children.id'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.description'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.id'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.content'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.description'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.owner'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.internal.type'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.parent.children'
  | 'measure.childrenStrapiMeasureDescriptionTextnode.parent.id'
  | 'measure.children.children'
  | 'measure.children.children.children'
  | 'measure.children.children.id'
  | 'measure.children.id'
  | 'measure.children.internal.content'
  | 'measure.children.internal.contentDigest'
  | 'measure.children.internal.description'
  | 'measure.children.internal.fieldOwners'
  | 'measure.children.internal.ignoreType'
  | 'measure.children.internal.mediaType'
  | 'measure.children.internal.owner'
  | 'measure.children.internal.type'
  | 'measure.children.parent.children'
  | 'measure.children.parent.id'
  | 'measure.createdAt'
  | 'measure.description.data.children'
  | 'measure.description.data.description'
  | 'measure.description.data.id'
  | 'measure.examples'
  | 'measure.examples.childStrapiExampleAwardTextnode.award'
  | 'measure.examples.childStrapiExampleAwardTextnode.children'
  | 'measure.examples.childStrapiExampleAwardTextnode.id'
  | 'measure.examples.childStrapiExampleDescriptionTextnode.children'
  | 'measure.examples.childStrapiExampleDescriptionTextnode.description'
  | 'measure.examples.childStrapiExampleDescriptionTextnode.id'
  | 'measure.examples.childStrapiExampleRelatedofficeTextnode.children'
  | 'measure.examples.childStrapiExampleRelatedofficeTextnode.id'
  | 'measure.examples.childStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'measure.examples.childStrapiExampleStakeholdersTextnode.children'
  | 'measure.examples.childStrapiExampleStakeholdersTextnode.id'
  | 'measure.examples.childStrapiExampleStakeholdersTextnode.stakeholders'
  | 'measure.examples.children'
  | 'measure.examples.childrenStrapiExampleAwardTextnode'
  | 'measure.examples.childrenStrapiExampleAwardTextnode.award'
  | 'measure.examples.childrenStrapiExampleAwardTextnode.children'
  | 'measure.examples.childrenStrapiExampleAwardTextnode.id'
  | 'measure.examples.childrenStrapiExampleDescriptionTextnode'
  | 'measure.examples.childrenStrapiExampleDescriptionTextnode.children'
  | 'measure.examples.childrenStrapiExampleDescriptionTextnode.description'
  | 'measure.examples.childrenStrapiExampleDescriptionTextnode.id'
  | 'measure.examples.childrenStrapiExampleRelatedofficeTextnode'
  | 'measure.examples.childrenStrapiExampleRelatedofficeTextnode.children'
  | 'measure.examples.childrenStrapiExampleRelatedofficeTextnode.id'
  | 'measure.examples.childrenStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'measure.examples.childrenStrapiExampleStakeholdersTextnode'
  | 'measure.examples.childrenStrapiExampleStakeholdersTextnode.children'
  | 'measure.examples.childrenStrapiExampleStakeholdersTextnode.id'
  | 'measure.examples.childrenStrapiExampleStakeholdersTextnode.stakeholders'
  | 'measure.examples.children.children'
  | 'measure.examples.children.id'
  | 'measure.examples.commune'
  | 'measure.examples.countryState'
  | 'measure.examples.createdAt'
  | 'measure.examples.evaluation.children'
  | 'measure.examples.evaluation.id'
  | 'measure.examples.evaluation.strapi_id'
  | 'measure.examples.funding'
  | 'measure.examples.gatsbyPath'
  | 'measure.examples.id'
  | 'measure.examples.image.alternativeText'
  | 'measure.examples.image.caption'
  | 'measure.examples.image.children'
  | 'measure.examples.image.createdAt'
  | 'measure.examples.image.ext'
  | 'measure.examples.image.hash'
  | 'measure.examples.image.height'
  | 'measure.examples.image.id'
  | 'measure.examples.image.mime'
  | 'measure.examples.image.name'
  | 'measure.examples.image.size'
  | 'measure.examples.image.strapi_id'
  | 'measure.examples.image.updatedAt'
  | 'measure.examples.image.url'
  | 'measure.examples.image.width'
  | 'measure.examples.internal.content'
  | 'measure.examples.internal.contentDigest'
  | 'measure.examples.internal.description'
  | 'measure.examples.internal.fieldOwners'
  | 'measure.examples.internal.ignoreType'
  | 'measure.examples.internal.mediaType'
  | 'measure.examples.internal.owner'
  | 'measure.examples.internal.type'
  | 'measure.examples.links'
  | 'measure.examples.links.children'
  | 'measure.examples.links.display'
  | 'measure.examples.links.id'
  | 'measure.examples.links.strapi_id'
  | 'measure.examples.links.url'
  | 'measure.examples.localChallanges'
  | 'measure.examples.measure.children'
  | 'measure.examples.measure.childrenStrapiMeasureDescriptionTextnode'
  | 'measure.examples.measure.createdAt'
  | 'measure.examples.measure.examples'
  | 'measure.examples.measure.gatsbyPath'
  | 'measure.examples.measure.id'
  | 'measure.examples.measure.name'
  | 'measure.examples.measure.publishedAt'
  | 'measure.examples.measure.slug'
  | 'measure.examples.measure.strapi_id'
  | 'measure.examples.measure.updatedAt'
  | 'measure.examples.name'
  | 'measure.examples.parent.children'
  | 'measure.examples.parent.id'
  | 'measure.examples.period'
  | 'measure.examples.population'
  | 'measure.examples.publishedAt'
  | 'measure.examples.shortDescription'
  | 'measure.examples.slug'
  | 'measure.examples.spatialStructure'
  | 'measure.examples.state'
  | 'measure.examples.strapi_id'
  | 'measure.examples.targetGroup'
  | 'measure.examples.updatedAt'
  | 'measure.gatsbyPath'
  | 'measure.id'
  | 'measure.image.alternativeText'
  | 'measure.image.caption'
  | 'measure.image.children'
  | 'measure.image.children.children'
  | 'measure.image.children.id'
  | 'measure.image.createdAt'
  | 'measure.image.ext'
  | 'measure.image.hash'
  | 'measure.image.height'
  | 'measure.image.id'
  | 'measure.image.internal.content'
  | 'measure.image.internal.contentDigest'
  | 'measure.image.internal.description'
  | 'measure.image.internal.fieldOwners'
  | 'measure.image.internal.ignoreType'
  | 'measure.image.internal.mediaType'
  | 'measure.image.internal.owner'
  | 'measure.image.internal.type'
  | 'measure.image.localFile.absolutePath'
  | 'measure.image.localFile.accessTime'
  | 'measure.image.localFile.atime'
  | 'measure.image.localFile.atimeMs'
  | 'measure.image.localFile.base'
  | 'measure.image.localFile.birthTime'
  | 'measure.image.localFile.birthtime'
  | 'measure.image.localFile.birthtimeMs'
  | 'measure.image.localFile.blksize'
  | 'measure.image.localFile.blocks'
  | 'measure.image.localFile.changeTime'
  | 'measure.image.localFile.children'
  | 'measure.image.localFile.childrenImageSharp'
  | 'measure.image.localFile.ctime'
  | 'measure.image.localFile.ctimeMs'
  | 'measure.image.localFile.dev'
  | 'measure.image.localFile.dir'
  | 'measure.image.localFile.ext'
  | 'measure.image.localFile.extension'
  | 'measure.image.localFile.gid'
  | 'measure.image.localFile.id'
  | 'measure.image.localFile.ino'
  | 'measure.image.localFile.mode'
  | 'measure.image.localFile.modifiedTime'
  | 'measure.image.localFile.mtime'
  | 'measure.image.localFile.mtimeMs'
  | 'measure.image.localFile.name'
  | 'measure.image.localFile.nlink'
  | 'measure.image.localFile.prettySize'
  | 'measure.image.localFile.rdev'
  | 'measure.image.localFile.relativeDirectory'
  | 'measure.image.localFile.relativePath'
  | 'measure.image.localFile.root'
  | 'measure.image.localFile.size'
  | 'measure.image.localFile.sourceInstanceName'
  | 'measure.image.localFile.uid'
  | 'measure.image.localFile.url'
  | 'measure.image.mime'
  | 'measure.image.name'
  | 'measure.image.parent.children'
  | 'measure.image.parent.id'
  | 'measure.image.size'
  | 'measure.image.strapi_id'
  | 'measure.image.updatedAt'
  | 'measure.image.url'
  | 'measure.image.width'
  | 'measure.internal.content'
  | 'measure.internal.contentDigest'
  | 'measure.internal.description'
  | 'measure.internal.fieldOwners'
  | 'measure.internal.ignoreType'
  | 'measure.internal.mediaType'
  | 'measure.internal.owner'
  | 'measure.internal.type'
  | 'measure.name'
  | 'measure.parent.children'
  | 'measure.parent.children.children'
  | 'measure.parent.children.id'
  | 'measure.parent.id'
  | 'measure.parent.internal.content'
  | 'measure.parent.internal.contentDigest'
  | 'measure.parent.internal.description'
  | 'measure.parent.internal.fieldOwners'
  | 'measure.parent.internal.ignoreType'
  | 'measure.parent.internal.mediaType'
  | 'measure.parent.internal.owner'
  | 'measure.parent.internal.type'
  | 'measure.parent.parent.children'
  | 'measure.parent.parent.id'
  | 'measure.publishedAt'
  | 'measure.slug'
  | 'measure.strapi_id'
  | 'measure.topic.childStrapiTopicDescriptionTextnode.children'
  | 'measure.topic.childStrapiTopicDescriptionTextnode.description'
  | 'measure.topic.childStrapiTopicDescriptionTextnode.id'
  | 'measure.topic.children'
  | 'measure.topic.childrenStrapiTopicDescriptionTextnode'
  | 'measure.topic.childrenStrapiTopicDescriptionTextnode.children'
  | 'measure.topic.childrenStrapiTopicDescriptionTextnode.description'
  | 'measure.topic.childrenStrapiTopicDescriptionTextnode.id'
  | 'measure.topic.children.children'
  | 'measure.topic.children.id'
  | 'measure.topic.createdAt'
  | 'measure.topic.gatsbyPath'
  | 'measure.topic.id'
  | 'measure.topic.image.alternativeText'
  | 'measure.topic.image.caption'
  | 'measure.topic.image.children'
  | 'measure.topic.image.createdAt'
  | 'measure.topic.image.ext'
  | 'measure.topic.image.hash'
  | 'measure.topic.image.height'
  | 'measure.topic.image.id'
  | 'measure.topic.image.mime'
  | 'measure.topic.image.name'
  | 'measure.topic.image.size'
  | 'measure.topic.image.strapi_id'
  | 'measure.topic.image.updatedAt'
  | 'measure.topic.image.url'
  | 'measure.topic.image.width'
  | 'measure.topic.internal.content'
  | 'measure.topic.internal.contentDigest'
  | 'measure.topic.internal.description'
  | 'measure.topic.internal.fieldOwners'
  | 'measure.topic.internal.ignoreType'
  | 'measure.topic.internal.mediaType'
  | 'measure.topic.internal.owner'
  | 'measure.topic.internal.type'
  | 'measure.topic.measures'
  | 'measure.topic.measures.children'
  | 'measure.topic.measures.childrenStrapiMeasureDescriptionTextnode'
  | 'measure.topic.measures.createdAt'
  | 'measure.topic.measures.examples'
  | 'measure.topic.measures.gatsbyPath'
  | 'measure.topic.measures.id'
  | 'measure.topic.measures.name'
  | 'measure.topic.measures.publishedAt'
  | 'measure.topic.measures.slug'
  | 'measure.topic.measures.strapi_id'
  | 'measure.topic.measures.updatedAt'
  | 'measure.topic.name'
  | 'measure.topic.parent.children'
  | 'measure.topic.parent.id'
  | 'measure.topic.publishedAt'
  | 'measure.topic.slug'
  | 'measure.topic.strapi_id'
  | 'measure.topic.updatedAt'
  | 'measure.updatedAt'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'period'
  | 'population'
  | 'publishedAt'
  | 'relatedOffice.data.children'
  | 'relatedOffice.data.children.children'
  | 'relatedOffice.data.children.id'
  | 'relatedOffice.data.id'
  | 'relatedOffice.data.internal.content'
  | 'relatedOffice.data.internal.contentDigest'
  | 'relatedOffice.data.internal.description'
  | 'relatedOffice.data.internal.fieldOwners'
  | 'relatedOffice.data.internal.ignoreType'
  | 'relatedOffice.data.internal.mediaType'
  | 'relatedOffice.data.internal.owner'
  | 'relatedOffice.data.internal.type'
  | 'relatedOffice.data.parent.children'
  | 'relatedOffice.data.parent.id'
  | 'relatedOffice.data.relatedOffice'
  | 'shortDescription'
  | 'slug'
  | 'spatialStructure'
  | 'stakeholders.data.children'
  | 'stakeholders.data.children.children'
  | 'stakeholders.data.children.id'
  | 'stakeholders.data.id'
  | 'stakeholders.data.internal.content'
  | 'stakeholders.data.internal.contentDigest'
  | 'stakeholders.data.internal.description'
  | 'stakeholders.data.internal.fieldOwners'
  | 'stakeholders.data.internal.ignoreType'
  | 'stakeholders.data.internal.mediaType'
  | 'stakeholders.data.internal.owner'
  | 'stakeholders.data.internal.type'
  | 'stakeholders.data.parent.children'
  | 'stakeholders.data.parent.id'
  | 'stakeholders.data.stakeholders'
  | 'state'
  | 'strapi_id'
  | 'targetGroup'
  | 'updatedAt';

type STRAPI_EXAMPLEFilterInput = {
  readonly award: InputMaybe<STRAPI_EXAMPLEAwardFilterInput>;
  readonly childStrapiExampleAwardTextnode: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput>;
  readonly childStrapiExampleDescriptionTextnode: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput>;
  readonly childStrapiExampleRelatedofficeTextnode: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput>;
  readonly childStrapiExampleStakeholdersTextnode: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenStrapiExampleAwardTextnode: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterListInput>;
  readonly childrenStrapiExampleDescriptionTextnode: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterListInput>;
  readonly childrenStrapiExampleRelatedofficeTextnode: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterListInput>;
  readonly childrenStrapiExampleStakeholdersTextnode: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterListInput>;
  readonly commune: InputMaybe<StringQueryOperatorInput>;
  readonly countryState: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<STRAPI_EXAMPLEDescriptionFilterInput>;
  readonly evaluation: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFilterInput>;
  readonly funding: InputMaybe<StringQueryOperatorInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<STRAPI__MEDIAFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly links: InputMaybe<STRAPI__COMPONENT_LINKS_LINKSFilterListInput>;
  readonly localChallanges: InputMaybe<StringQueryOperatorInput>;
  readonly measure: InputMaybe<STRAPI_MEASUREFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly period: InputMaybe<StringQueryOperatorInput>;
  readonly population: InputMaybe<StringQueryOperatorInput>;
  readonly publishedAt: InputMaybe<DateQueryOperatorInput>;
  readonly relatedOffice: InputMaybe<STRAPI_EXAMPLERelatedOfficeFilterInput>;
  readonly shortDescription: InputMaybe<StringQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spatialStructure: InputMaybe<StringQueryOperatorInput>;
  readonly stakeholders: InputMaybe<STRAPI_EXAMPLEStakeholdersFilterInput>;
  readonly state: InputMaybe<StringQueryOperatorInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly targetGroup: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type STRAPI_EXAMPLEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_EXAMPLEFilterInput>;
};

type STRAPI_EXAMPLEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLEGroupConnection_distinctArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEGroupConnection_groupArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLEGroupConnection_maxArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEGroupConnection_minArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};


type STRAPI_EXAMPLEGroupConnection_sumArgs = {
  field: STRAPI_EXAMPLEFieldsEnum;
};

type STRAPI_EXAMPLERelatedOffice = {
  readonly data: Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
};

type STRAPI_EXAMPLERelatedOfficeFilterInput = {
  readonly data: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_EXAMPLEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_EXAMPLEStakeholders = {
  readonly data: Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
};

type STRAPI_EXAMPLEStakeholdersFilterInput = {
  readonly data: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODE = Node & {
  readonly award: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection_groupArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection_maxArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection_minArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEConnection_sumArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
  readonly node: STRAPI_EXAMPLE_AWARD_TEXTNODE;
  readonly previous: Maybe<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum =
  | 'award'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput = {
  readonly award: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_AWARD_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_AWARD_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_AWARD_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_EXAMPLE_AWARD_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection_groupArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection_maxArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection_minArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEConnection_sumArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
  readonly node: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE;
  readonly previous: Maybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_DESCRIPTION_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_EXAMPLE_DESCRIPTION_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly relatedOffice: Maybe<Scalars['String']>;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection_groupArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection_maxArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection_minArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEConnection_sumArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
  readonly node: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE;
  readonly previous: Maybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'relatedOffice';

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly relatedOffice: InputMaybe<StringQueryOperatorInput>;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_EXAMPLE_RELATEDOFFICE_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly stakeholders: Maybe<Scalars['String']>;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection_groupArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection_maxArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection_minArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEConnection_sumArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
  readonly node: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE;
  readonly previous: Maybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'stakeholders';

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly stakeholders: InputMaybe<StringQueryOperatorInput>;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFilterInput>;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};


type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum;
};

type STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_EXAMPLE_STAKEHOLDERS_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_MEASURE = Node & {
  /** Returns the first child node of type STRAPI_MEASURE_DESCRIPTION_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiMeasureDescriptionTextnode: Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type STRAPI_MEASURE_DESCRIPTION_TEXTNODE */
  readonly childrenStrapiMeasureDescriptionTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>>>;
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly description: Maybe<STRAPI_MEASUREDescription>;
  readonly examples: Maybe<ReadonlyArray<Maybe<STRAPI_EXAMPLE>>>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<STRAPI__MEDIA>;
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['Date']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly topic: Maybe<STRAPI_TOPIC>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type STRAPI_MEASURE_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_MEASURE_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};


type STRAPI_MEASURE_publishedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_MEASURE_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type STRAPI_MEASUREConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_MEASUREEdge>;
  readonly group: ReadonlyArray<STRAPI_MEASUREGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_MEASURE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_MEASUREConnection_distinctArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREConnection_groupArgs = {
  field: STRAPI_MEASUREFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_MEASUREConnection_maxArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREConnection_minArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREConnection_sumArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};

type STRAPI_MEASUREDescription = {
  readonly data: Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
};

type STRAPI_MEASUREDescriptionFilterInput = {
  readonly data: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_MEASUREEdge = {
  readonly next: Maybe<STRAPI_MEASURE>;
  readonly node: STRAPI_MEASURE;
  readonly previous: Maybe<STRAPI_MEASURE>;
};

type STRAPI_MEASUREFieldsEnum =
  | 'childStrapiMeasureDescriptionTextnode.children'
  | 'childStrapiMeasureDescriptionTextnode.children.children'
  | 'childStrapiMeasureDescriptionTextnode.children.children.children'
  | 'childStrapiMeasureDescriptionTextnode.children.children.id'
  | 'childStrapiMeasureDescriptionTextnode.children.id'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.content'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.contentDigest'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.description'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.fieldOwners'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.ignoreType'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.mediaType'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.owner'
  | 'childStrapiMeasureDescriptionTextnode.children.internal.type'
  | 'childStrapiMeasureDescriptionTextnode.children.parent.children'
  | 'childStrapiMeasureDescriptionTextnode.children.parent.id'
  | 'childStrapiMeasureDescriptionTextnode.description'
  | 'childStrapiMeasureDescriptionTextnode.id'
  | 'childStrapiMeasureDescriptionTextnode.internal.content'
  | 'childStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'childStrapiMeasureDescriptionTextnode.internal.description'
  | 'childStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'childStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'childStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'childStrapiMeasureDescriptionTextnode.internal.owner'
  | 'childStrapiMeasureDescriptionTextnode.internal.type'
  | 'childStrapiMeasureDescriptionTextnode.parent.children'
  | 'childStrapiMeasureDescriptionTextnode.parent.children.children'
  | 'childStrapiMeasureDescriptionTextnode.parent.children.id'
  | 'childStrapiMeasureDescriptionTextnode.parent.id'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.content'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.contentDigest'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.description'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.fieldOwners'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.ignoreType'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.mediaType'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.owner'
  | 'childStrapiMeasureDescriptionTextnode.parent.internal.type'
  | 'childStrapiMeasureDescriptionTextnode.parent.parent.children'
  | 'childStrapiMeasureDescriptionTextnode.parent.parent.id'
  | 'children'
  | 'childrenStrapiMeasureDescriptionTextnode'
  | 'childrenStrapiMeasureDescriptionTextnode.children'
  | 'childrenStrapiMeasureDescriptionTextnode.children.children'
  | 'childrenStrapiMeasureDescriptionTextnode.children.children.children'
  | 'childrenStrapiMeasureDescriptionTextnode.children.children.id'
  | 'childrenStrapiMeasureDescriptionTextnode.children.id'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.content'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.contentDigest'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.description'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.fieldOwners'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.ignoreType'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.mediaType'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.owner'
  | 'childrenStrapiMeasureDescriptionTextnode.children.internal.type'
  | 'childrenStrapiMeasureDescriptionTextnode.children.parent.children'
  | 'childrenStrapiMeasureDescriptionTextnode.children.parent.id'
  | 'childrenStrapiMeasureDescriptionTextnode.description'
  | 'childrenStrapiMeasureDescriptionTextnode.id'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.content'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.description'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.owner'
  | 'childrenStrapiMeasureDescriptionTextnode.internal.type'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.children'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.children.children'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.children.id'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.id'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.content'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.contentDigest'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.description'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.ignoreType'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.mediaType'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.owner'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.internal.type'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.parent.children'
  | 'childrenStrapiMeasureDescriptionTextnode.parent.parent.id'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'description.data.children'
  | 'description.data.children.children'
  | 'description.data.children.id'
  | 'description.data.description'
  | 'description.data.id'
  | 'description.data.internal.content'
  | 'description.data.internal.contentDigest'
  | 'description.data.internal.description'
  | 'description.data.internal.fieldOwners'
  | 'description.data.internal.ignoreType'
  | 'description.data.internal.mediaType'
  | 'description.data.internal.owner'
  | 'description.data.internal.type'
  | 'description.data.parent.children'
  | 'description.data.parent.id'
  | 'examples'
  | 'examples.award.data.award'
  | 'examples.award.data.children'
  | 'examples.award.data.id'
  | 'examples.childStrapiExampleAwardTextnode.award'
  | 'examples.childStrapiExampleAwardTextnode.children'
  | 'examples.childStrapiExampleAwardTextnode.children.children'
  | 'examples.childStrapiExampleAwardTextnode.children.id'
  | 'examples.childStrapiExampleAwardTextnode.id'
  | 'examples.childStrapiExampleAwardTextnode.internal.content'
  | 'examples.childStrapiExampleAwardTextnode.internal.contentDigest'
  | 'examples.childStrapiExampleAwardTextnode.internal.description'
  | 'examples.childStrapiExampleAwardTextnode.internal.fieldOwners'
  | 'examples.childStrapiExampleAwardTextnode.internal.ignoreType'
  | 'examples.childStrapiExampleAwardTextnode.internal.mediaType'
  | 'examples.childStrapiExampleAwardTextnode.internal.owner'
  | 'examples.childStrapiExampleAwardTextnode.internal.type'
  | 'examples.childStrapiExampleAwardTextnode.parent.children'
  | 'examples.childStrapiExampleAwardTextnode.parent.id'
  | 'examples.childStrapiExampleDescriptionTextnode.children'
  | 'examples.childStrapiExampleDescriptionTextnode.children.children'
  | 'examples.childStrapiExampleDescriptionTextnode.children.id'
  | 'examples.childStrapiExampleDescriptionTextnode.description'
  | 'examples.childStrapiExampleDescriptionTextnode.id'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.content'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.contentDigest'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.description'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.fieldOwners'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.ignoreType'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.mediaType'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.owner'
  | 'examples.childStrapiExampleDescriptionTextnode.internal.type'
  | 'examples.childStrapiExampleDescriptionTextnode.parent.children'
  | 'examples.childStrapiExampleDescriptionTextnode.parent.id'
  | 'examples.childStrapiExampleRelatedofficeTextnode.children'
  | 'examples.childStrapiExampleRelatedofficeTextnode.children.children'
  | 'examples.childStrapiExampleRelatedofficeTextnode.children.id'
  | 'examples.childStrapiExampleRelatedofficeTextnode.id'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.content'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.contentDigest'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.description'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.fieldOwners'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.ignoreType'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.mediaType'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.owner'
  | 'examples.childStrapiExampleRelatedofficeTextnode.internal.type'
  | 'examples.childStrapiExampleRelatedofficeTextnode.parent.children'
  | 'examples.childStrapiExampleRelatedofficeTextnode.parent.id'
  | 'examples.childStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'examples.childStrapiExampleStakeholdersTextnode.children'
  | 'examples.childStrapiExampleStakeholdersTextnode.children.children'
  | 'examples.childStrapiExampleStakeholdersTextnode.children.id'
  | 'examples.childStrapiExampleStakeholdersTextnode.id'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.content'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.contentDigest'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.description'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.fieldOwners'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.ignoreType'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.mediaType'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.owner'
  | 'examples.childStrapiExampleStakeholdersTextnode.internal.type'
  | 'examples.childStrapiExampleStakeholdersTextnode.parent.children'
  | 'examples.childStrapiExampleStakeholdersTextnode.parent.id'
  | 'examples.childStrapiExampleStakeholdersTextnode.stakeholders'
  | 'examples.children'
  | 'examples.childrenStrapiExampleAwardTextnode'
  | 'examples.childrenStrapiExampleAwardTextnode.award'
  | 'examples.childrenStrapiExampleAwardTextnode.children'
  | 'examples.childrenStrapiExampleAwardTextnode.children.children'
  | 'examples.childrenStrapiExampleAwardTextnode.children.id'
  | 'examples.childrenStrapiExampleAwardTextnode.id'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.content'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.contentDigest'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.description'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.fieldOwners'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.ignoreType'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.mediaType'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.owner'
  | 'examples.childrenStrapiExampleAwardTextnode.internal.type'
  | 'examples.childrenStrapiExampleAwardTextnode.parent.children'
  | 'examples.childrenStrapiExampleAwardTextnode.parent.id'
  | 'examples.childrenStrapiExampleDescriptionTextnode'
  | 'examples.childrenStrapiExampleDescriptionTextnode.children'
  | 'examples.childrenStrapiExampleDescriptionTextnode.children.children'
  | 'examples.childrenStrapiExampleDescriptionTextnode.children.id'
  | 'examples.childrenStrapiExampleDescriptionTextnode.description'
  | 'examples.childrenStrapiExampleDescriptionTextnode.id'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.content'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.contentDigest'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.description'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.fieldOwners'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.ignoreType'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.mediaType'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.owner'
  | 'examples.childrenStrapiExampleDescriptionTextnode.internal.type'
  | 'examples.childrenStrapiExampleDescriptionTextnode.parent.children'
  | 'examples.childrenStrapiExampleDescriptionTextnode.parent.id'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.children'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.children.children'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.children.id'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.id'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.content'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.contentDigest'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.description'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.fieldOwners'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.ignoreType'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.mediaType'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.owner'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.internal.type'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.parent.children'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.parent.id'
  | 'examples.childrenStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'examples.childrenStrapiExampleStakeholdersTextnode'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.children'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.children.children'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.children.id'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.id'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.content'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.contentDigest'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.description'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.fieldOwners'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.ignoreType'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.mediaType'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.owner'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.internal.type'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.parent.children'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.parent.id'
  | 'examples.childrenStrapiExampleStakeholdersTextnode.stakeholders'
  | 'examples.children.children'
  | 'examples.children.children.children'
  | 'examples.children.children.id'
  | 'examples.children.id'
  | 'examples.children.internal.content'
  | 'examples.children.internal.contentDigest'
  | 'examples.children.internal.description'
  | 'examples.children.internal.fieldOwners'
  | 'examples.children.internal.ignoreType'
  | 'examples.children.internal.mediaType'
  | 'examples.children.internal.owner'
  | 'examples.children.internal.type'
  | 'examples.children.parent.children'
  | 'examples.children.parent.id'
  | 'examples.commune'
  | 'examples.countryState'
  | 'examples.createdAt'
  | 'examples.description.data.children'
  | 'examples.description.data.description'
  | 'examples.description.data.id'
  | 'examples.evaluation.accessibility.children'
  | 'examples.evaluation.accessibility.description'
  | 'examples.evaluation.accessibility.id'
  | 'examples.evaluation.accessibility.percent'
  | 'examples.evaluation.accessibility.strapi_id'
  | 'examples.evaluation.children'
  | 'examples.evaluation.children.children'
  | 'examples.evaluation.children.id'
  | 'examples.evaluation.effectiveness.children'
  | 'examples.evaluation.effectiveness.description'
  | 'examples.evaluation.effectiveness.id'
  | 'examples.evaluation.effectiveness.percent'
  | 'examples.evaluation.effectiveness.strapi_id'
  | 'examples.evaluation.effort.children'
  | 'examples.evaluation.effort.description'
  | 'examples.evaluation.effort.id'
  | 'examples.evaluation.effort.percent'
  | 'examples.evaluation.effort.strapi_id'
  | 'examples.evaluation.evaluability.children'
  | 'examples.evaluation.evaluability.description'
  | 'examples.evaluation.evaluability.id'
  | 'examples.evaluation.evaluability.percent'
  | 'examples.evaluation.evaluability.strapi_id'
  | 'examples.evaluation.execution.children'
  | 'examples.evaluation.execution.description'
  | 'examples.evaluation.execution.id'
  | 'examples.evaluation.execution.percent'
  | 'examples.evaluation.execution.strapi_id'
  | 'examples.evaluation.id'
  | 'examples.evaluation.internal.content'
  | 'examples.evaluation.internal.contentDigest'
  | 'examples.evaluation.internal.description'
  | 'examples.evaluation.internal.fieldOwners'
  | 'examples.evaluation.internal.ignoreType'
  | 'examples.evaluation.internal.mediaType'
  | 'examples.evaluation.internal.owner'
  | 'examples.evaluation.internal.type'
  | 'examples.evaluation.parent.children'
  | 'examples.evaluation.parent.id'
  | 'examples.evaluation.participation.children'
  | 'examples.evaluation.participation.description'
  | 'examples.evaluation.participation.id'
  | 'examples.evaluation.participation.percent'
  | 'examples.evaluation.participation.strapi_id'
  | 'examples.evaluation.portability.children'
  | 'examples.evaluation.portability.description'
  | 'examples.evaluation.portability.id'
  | 'examples.evaluation.portability.percent'
  | 'examples.evaluation.portability.strapi_id'
  | 'examples.evaluation.strapi_id'
  | 'examples.evaluation.synergies.children'
  | 'examples.evaluation.synergies.description'
  | 'examples.evaluation.synergies.id'
  | 'examples.evaluation.synergies.percent'
  | 'examples.evaluation.synergies.strapi_id'
  | 'examples.funding'
  | 'examples.gatsbyPath'
  | 'examples.id'
  | 'examples.image.alternativeText'
  | 'examples.image.caption'
  | 'examples.image.children'
  | 'examples.image.children.children'
  | 'examples.image.children.id'
  | 'examples.image.createdAt'
  | 'examples.image.ext'
  | 'examples.image.hash'
  | 'examples.image.height'
  | 'examples.image.id'
  | 'examples.image.internal.content'
  | 'examples.image.internal.contentDigest'
  | 'examples.image.internal.description'
  | 'examples.image.internal.fieldOwners'
  | 'examples.image.internal.ignoreType'
  | 'examples.image.internal.mediaType'
  | 'examples.image.internal.owner'
  | 'examples.image.internal.type'
  | 'examples.image.localFile.absolutePath'
  | 'examples.image.localFile.accessTime'
  | 'examples.image.localFile.atime'
  | 'examples.image.localFile.atimeMs'
  | 'examples.image.localFile.base'
  | 'examples.image.localFile.birthTime'
  | 'examples.image.localFile.birthtime'
  | 'examples.image.localFile.birthtimeMs'
  | 'examples.image.localFile.blksize'
  | 'examples.image.localFile.blocks'
  | 'examples.image.localFile.changeTime'
  | 'examples.image.localFile.children'
  | 'examples.image.localFile.childrenImageSharp'
  | 'examples.image.localFile.ctime'
  | 'examples.image.localFile.ctimeMs'
  | 'examples.image.localFile.dev'
  | 'examples.image.localFile.dir'
  | 'examples.image.localFile.ext'
  | 'examples.image.localFile.extension'
  | 'examples.image.localFile.gid'
  | 'examples.image.localFile.id'
  | 'examples.image.localFile.ino'
  | 'examples.image.localFile.mode'
  | 'examples.image.localFile.modifiedTime'
  | 'examples.image.localFile.mtime'
  | 'examples.image.localFile.mtimeMs'
  | 'examples.image.localFile.name'
  | 'examples.image.localFile.nlink'
  | 'examples.image.localFile.prettySize'
  | 'examples.image.localFile.rdev'
  | 'examples.image.localFile.relativeDirectory'
  | 'examples.image.localFile.relativePath'
  | 'examples.image.localFile.root'
  | 'examples.image.localFile.size'
  | 'examples.image.localFile.sourceInstanceName'
  | 'examples.image.localFile.uid'
  | 'examples.image.localFile.url'
  | 'examples.image.mime'
  | 'examples.image.name'
  | 'examples.image.parent.children'
  | 'examples.image.parent.id'
  | 'examples.image.size'
  | 'examples.image.strapi_id'
  | 'examples.image.updatedAt'
  | 'examples.image.url'
  | 'examples.image.width'
  | 'examples.internal.content'
  | 'examples.internal.contentDigest'
  | 'examples.internal.description'
  | 'examples.internal.fieldOwners'
  | 'examples.internal.ignoreType'
  | 'examples.internal.mediaType'
  | 'examples.internal.owner'
  | 'examples.internal.type'
  | 'examples.links'
  | 'examples.links.children'
  | 'examples.links.children.children'
  | 'examples.links.children.id'
  | 'examples.links.display'
  | 'examples.links.id'
  | 'examples.links.internal.content'
  | 'examples.links.internal.contentDigest'
  | 'examples.links.internal.description'
  | 'examples.links.internal.fieldOwners'
  | 'examples.links.internal.ignoreType'
  | 'examples.links.internal.mediaType'
  | 'examples.links.internal.owner'
  | 'examples.links.internal.type'
  | 'examples.links.parent.children'
  | 'examples.links.parent.id'
  | 'examples.links.strapi_id'
  | 'examples.links.url'
  | 'examples.localChallanges'
  | 'examples.measure.childStrapiMeasureDescriptionTextnode.children'
  | 'examples.measure.childStrapiMeasureDescriptionTextnode.description'
  | 'examples.measure.childStrapiMeasureDescriptionTextnode.id'
  | 'examples.measure.children'
  | 'examples.measure.childrenStrapiMeasureDescriptionTextnode'
  | 'examples.measure.childrenStrapiMeasureDescriptionTextnode.children'
  | 'examples.measure.childrenStrapiMeasureDescriptionTextnode.description'
  | 'examples.measure.childrenStrapiMeasureDescriptionTextnode.id'
  | 'examples.measure.children.children'
  | 'examples.measure.children.id'
  | 'examples.measure.createdAt'
  | 'examples.measure.examples'
  | 'examples.measure.examples.children'
  | 'examples.measure.examples.childrenStrapiExampleAwardTextnode'
  | 'examples.measure.examples.childrenStrapiExampleDescriptionTextnode'
  | 'examples.measure.examples.childrenStrapiExampleRelatedofficeTextnode'
  | 'examples.measure.examples.childrenStrapiExampleStakeholdersTextnode'
  | 'examples.measure.examples.commune'
  | 'examples.measure.examples.countryState'
  | 'examples.measure.examples.createdAt'
  | 'examples.measure.examples.funding'
  | 'examples.measure.examples.gatsbyPath'
  | 'examples.measure.examples.id'
  | 'examples.measure.examples.links'
  | 'examples.measure.examples.localChallanges'
  | 'examples.measure.examples.name'
  | 'examples.measure.examples.period'
  | 'examples.measure.examples.population'
  | 'examples.measure.examples.publishedAt'
  | 'examples.measure.examples.shortDescription'
  | 'examples.measure.examples.slug'
  | 'examples.measure.examples.spatialStructure'
  | 'examples.measure.examples.state'
  | 'examples.measure.examples.strapi_id'
  | 'examples.measure.examples.targetGroup'
  | 'examples.measure.examples.updatedAt'
  | 'examples.measure.gatsbyPath'
  | 'examples.measure.id'
  | 'examples.measure.image.alternativeText'
  | 'examples.measure.image.caption'
  | 'examples.measure.image.children'
  | 'examples.measure.image.createdAt'
  | 'examples.measure.image.ext'
  | 'examples.measure.image.hash'
  | 'examples.measure.image.height'
  | 'examples.measure.image.id'
  | 'examples.measure.image.mime'
  | 'examples.measure.image.name'
  | 'examples.measure.image.size'
  | 'examples.measure.image.strapi_id'
  | 'examples.measure.image.updatedAt'
  | 'examples.measure.image.url'
  | 'examples.measure.image.width'
  | 'examples.measure.internal.content'
  | 'examples.measure.internal.contentDigest'
  | 'examples.measure.internal.description'
  | 'examples.measure.internal.fieldOwners'
  | 'examples.measure.internal.ignoreType'
  | 'examples.measure.internal.mediaType'
  | 'examples.measure.internal.owner'
  | 'examples.measure.internal.type'
  | 'examples.measure.name'
  | 'examples.measure.parent.children'
  | 'examples.measure.parent.id'
  | 'examples.measure.publishedAt'
  | 'examples.measure.slug'
  | 'examples.measure.strapi_id'
  | 'examples.measure.topic.children'
  | 'examples.measure.topic.childrenStrapiTopicDescriptionTextnode'
  | 'examples.measure.topic.createdAt'
  | 'examples.measure.topic.gatsbyPath'
  | 'examples.measure.topic.id'
  | 'examples.measure.topic.measures'
  | 'examples.measure.topic.name'
  | 'examples.measure.topic.publishedAt'
  | 'examples.measure.topic.slug'
  | 'examples.measure.topic.strapi_id'
  | 'examples.measure.topic.updatedAt'
  | 'examples.measure.updatedAt'
  | 'examples.name'
  | 'examples.parent.children'
  | 'examples.parent.children.children'
  | 'examples.parent.children.id'
  | 'examples.parent.id'
  | 'examples.parent.internal.content'
  | 'examples.parent.internal.contentDigest'
  | 'examples.parent.internal.description'
  | 'examples.parent.internal.fieldOwners'
  | 'examples.parent.internal.ignoreType'
  | 'examples.parent.internal.mediaType'
  | 'examples.parent.internal.owner'
  | 'examples.parent.internal.type'
  | 'examples.parent.parent.children'
  | 'examples.parent.parent.id'
  | 'examples.period'
  | 'examples.population'
  | 'examples.publishedAt'
  | 'examples.relatedOffice.data.children'
  | 'examples.relatedOffice.data.id'
  | 'examples.relatedOffice.data.relatedOffice'
  | 'examples.shortDescription'
  | 'examples.slug'
  | 'examples.spatialStructure'
  | 'examples.stakeholders.data.children'
  | 'examples.stakeholders.data.id'
  | 'examples.stakeholders.data.stakeholders'
  | 'examples.state'
  | 'examples.strapi_id'
  | 'examples.targetGroup'
  | 'examples.updatedAt'
  | 'gatsbyPath'
  | 'id'
  | 'image.alternativeText'
  | 'image.caption'
  | 'image.children'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.createdAt'
  | 'image.ext'
  | 'image.formats.small.ext'
  | 'image.formats.small.hash'
  | 'image.formats.small.height'
  | 'image.formats.small.mime'
  | 'image.formats.small.name'
  | 'image.formats.small.size'
  | 'image.formats.small.url'
  | 'image.formats.small.width'
  | 'image.formats.thumbnail.ext'
  | 'image.formats.thumbnail.hash'
  | 'image.formats.thumbnail.height'
  | 'image.formats.thumbnail.mime'
  | 'image.formats.thumbnail.name'
  | 'image.formats.thumbnail.size'
  | 'image.formats.thumbnail.url'
  | 'image.formats.thumbnail.width'
  | 'image.hash'
  | 'image.height'
  | 'image.id'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.localFile.absolutePath'
  | 'image.localFile.accessTime'
  | 'image.localFile.atime'
  | 'image.localFile.atimeMs'
  | 'image.localFile.base'
  | 'image.localFile.birthTime'
  | 'image.localFile.birthtime'
  | 'image.localFile.birthtimeMs'
  | 'image.localFile.blksize'
  | 'image.localFile.blocks'
  | 'image.localFile.changeTime'
  | 'image.localFile.childImageSharp.children'
  | 'image.localFile.childImageSharp.gatsbyImageData'
  | 'image.localFile.childImageSharp.id'
  | 'image.localFile.children'
  | 'image.localFile.childrenImageSharp'
  | 'image.localFile.childrenImageSharp.children'
  | 'image.localFile.childrenImageSharp.gatsbyImageData'
  | 'image.localFile.childrenImageSharp.id'
  | 'image.localFile.children.children'
  | 'image.localFile.children.id'
  | 'image.localFile.ctime'
  | 'image.localFile.ctimeMs'
  | 'image.localFile.dev'
  | 'image.localFile.dir'
  | 'image.localFile.ext'
  | 'image.localFile.extension'
  | 'image.localFile.gid'
  | 'image.localFile.id'
  | 'image.localFile.ino'
  | 'image.localFile.internal.content'
  | 'image.localFile.internal.contentDigest'
  | 'image.localFile.internal.description'
  | 'image.localFile.internal.fieldOwners'
  | 'image.localFile.internal.ignoreType'
  | 'image.localFile.internal.mediaType'
  | 'image.localFile.internal.owner'
  | 'image.localFile.internal.type'
  | 'image.localFile.mode'
  | 'image.localFile.modifiedTime'
  | 'image.localFile.mtime'
  | 'image.localFile.mtimeMs'
  | 'image.localFile.name'
  | 'image.localFile.nlink'
  | 'image.localFile.parent.children'
  | 'image.localFile.parent.id'
  | 'image.localFile.prettySize'
  | 'image.localFile.rdev'
  | 'image.localFile.relativeDirectory'
  | 'image.localFile.relativePath'
  | 'image.localFile.root'
  | 'image.localFile.size'
  | 'image.localFile.sourceInstanceName'
  | 'image.localFile.uid'
  | 'image.localFile.url'
  | 'image.mime'
  | 'image.name'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.size'
  | 'image.strapi_id'
  | 'image.updatedAt'
  | 'image.url'
  | 'image.width'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'slug'
  | 'strapi_id'
  | 'topic.childStrapiTopicDescriptionTextnode.children'
  | 'topic.childStrapiTopicDescriptionTextnode.children.children'
  | 'topic.childStrapiTopicDescriptionTextnode.children.id'
  | 'topic.childStrapiTopicDescriptionTextnode.description'
  | 'topic.childStrapiTopicDescriptionTextnode.id'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.content'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.contentDigest'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.description'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.fieldOwners'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.ignoreType'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.mediaType'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.owner'
  | 'topic.childStrapiTopicDescriptionTextnode.internal.type'
  | 'topic.childStrapiTopicDescriptionTextnode.parent.children'
  | 'topic.childStrapiTopicDescriptionTextnode.parent.id'
  | 'topic.children'
  | 'topic.childrenStrapiTopicDescriptionTextnode'
  | 'topic.childrenStrapiTopicDescriptionTextnode.children'
  | 'topic.childrenStrapiTopicDescriptionTextnode.children.children'
  | 'topic.childrenStrapiTopicDescriptionTextnode.children.id'
  | 'topic.childrenStrapiTopicDescriptionTextnode.description'
  | 'topic.childrenStrapiTopicDescriptionTextnode.id'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.content'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.contentDigest'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.description'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.fieldOwners'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.ignoreType'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.mediaType'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.owner'
  | 'topic.childrenStrapiTopicDescriptionTextnode.internal.type'
  | 'topic.childrenStrapiTopicDescriptionTextnode.parent.children'
  | 'topic.childrenStrapiTopicDescriptionTextnode.parent.id'
  | 'topic.children.children'
  | 'topic.children.children.children'
  | 'topic.children.children.id'
  | 'topic.children.id'
  | 'topic.children.internal.content'
  | 'topic.children.internal.contentDigest'
  | 'topic.children.internal.description'
  | 'topic.children.internal.fieldOwners'
  | 'topic.children.internal.ignoreType'
  | 'topic.children.internal.mediaType'
  | 'topic.children.internal.owner'
  | 'topic.children.internal.type'
  | 'topic.children.parent.children'
  | 'topic.children.parent.id'
  | 'topic.createdAt'
  | 'topic.description.data.children'
  | 'topic.description.data.description'
  | 'topic.description.data.id'
  | 'topic.gatsbyPath'
  | 'topic.id'
  | 'topic.image.alternativeText'
  | 'topic.image.caption'
  | 'topic.image.children'
  | 'topic.image.children.children'
  | 'topic.image.children.id'
  | 'topic.image.createdAt'
  | 'topic.image.ext'
  | 'topic.image.hash'
  | 'topic.image.height'
  | 'topic.image.id'
  | 'topic.image.internal.content'
  | 'topic.image.internal.contentDigest'
  | 'topic.image.internal.description'
  | 'topic.image.internal.fieldOwners'
  | 'topic.image.internal.ignoreType'
  | 'topic.image.internal.mediaType'
  | 'topic.image.internal.owner'
  | 'topic.image.internal.type'
  | 'topic.image.localFile.absolutePath'
  | 'topic.image.localFile.accessTime'
  | 'topic.image.localFile.atime'
  | 'topic.image.localFile.atimeMs'
  | 'topic.image.localFile.base'
  | 'topic.image.localFile.birthTime'
  | 'topic.image.localFile.birthtime'
  | 'topic.image.localFile.birthtimeMs'
  | 'topic.image.localFile.blksize'
  | 'topic.image.localFile.blocks'
  | 'topic.image.localFile.changeTime'
  | 'topic.image.localFile.children'
  | 'topic.image.localFile.childrenImageSharp'
  | 'topic.image.localFile.ctime'
  | 'topic.image.localFile.ctimeMs'
  | 'topic.image.localFile.dev'
  | 'topic.image.localFile.dir'
  | 'topic.image.localFile.ext'
  | 'topic.image.localFile.extension'
  | 'topic.image.localFile.gid'
  | 'topic.image.localFile.id'
  | 'topic.image.localFile.ino'
  | 'topic.image.localFile.mode'
  | 'topic.image.localFile.modifiedTime'
  | 'topic.image.localFile.mtime'
  | 'topic.image.localFile.mtimeMs'
  | 'topic.image.localFile.name'
  | 'topic.image.localFile.nlink'
  | 'topic.image.localFile.prettySize'
  | 'topic.image.localFile.rdev'
  | 'topic.image.localFile.relativeDirectory'
  | 'topic.image.localFile.relativePath'
  | 'topic.image.localFile.root'
  | 'topic.image.localFile.size'
  | 'topic.image.localFile.sourceInstanceName'
  | 'topic.image.localFile.uid'
  | 'topic.image.localFile.url'
  | 'topic.image.mime'
  | 'topic.image.name'
  | 'topic.image.parent.children'
  | 'topic.image.parent.id'
  | 'topic.image.size'
  | 'topic.image.strapi_id'
  | 'topic.image.updatedAt'
  | 'topic.image.url'
  | 'topic.image.width'
  | 'topic.internal.content'
  | 'topic.internal.contentDigest'
  | 'topic.internal.description'
  | 'topic.internal.fieldOwners'
  | 'topic.internal.ignoreType'
  | 'topic.internal.mediaType'
  | 'topic.internal.owner'
  | 'topic.internal.type'
  | 'topic.measures'
  | 'topic.measures.childStrapiMeasureDescriptionTextnode.children'
  | 'topic.measures.childStrapiMeasureDescriptionTextnode.description'
  | 'topic.measures.childStrapiMeasureDescriptionTextnode.id'
  | 'topic.measures.children'
  | 'topic.measures.childrenStrapiMeasureDescriptionTextnode'
  | 'topic.measures.childrenStrapiMeasureDescriptionTextnode.children'
  | 'topic.measures.childrenStrapiMeasureDescriptionTextnode.description'
  | 'topic.measures.childrenStrapiMeasureDescriptionTextnode.id'
  | 'topic.measures.children.children'
  | 'topic.measures.children.id'
  | 'topic.measures.createdAt'
  | 'topic.measures.examples'
  | 'topic.measures.examples.children'
  | 'topic.measures.examples.childrenStrapiExampleAwardTextnode'
  | 'topic.measures.examples.childrenStrapiExampleDescriptionTextnode'
  | 'topic.measures.examples.childrenStrapiExampleRelatedofficeTextnode'
  | 'topic.measures.examples.childrenStrapiExampleStakeholdersTextnode'
  | 'topic.measures.examples.commune'
  | 'topic.measures.examples.countryState'
  | 'topic.measures.examples.createdAt'
  | 'topic.measures.examples.funding'
  | 'topic.measures.examples.gatsbyPath'
  | 'topic.measures.examples.id'
  | 'topic.measures.examples.links'
  | 'topic.measures.examples.localChallanges'
  | 'topic.measures.examples.name'
  | 'topic.measures.examples.period'
  | 'topic.measures.examples.population'
  | 'topic.measures.examples.publishedAt'
  | 'topic.measures.examples.shortDescription'
  | 'topic.measures.examples.slug'
  | 'topic.measures.examples.spatialStructure'
  | 'topic.measures.examples.state'
  | 'topic.measures.examples.strapi_id'
  | 'topic.measures.examples.targetGroup'
  | 'topic.measures.examples.updatedAt'
  | 'topic.measures.gatsbyPath'
  | 'topic.measures.id'
  | 'topic.measures.image.alternativeText'
  | 'topic.measures.image.caption'
  | 'topic.measures.image.children'
  | 'topic.measures.image.createdAt'
  | 'topic.measures.image.ext'
  | 'topic.measures.image.hash'
  | 'topic.measures.image.height'
  | 'topic.measures.image.id'
  | 'topic.measures.image.mime'
  | 'topic.measures.image.name'
  | 'topic.measures.image.size'
  | 'topic.measures.image.strapi_id'
  | 'topic.measures.image.updatedAt'
  | 'topic.measures.image.url'
  | 'topic.measures.image.width'
  | 'topic.measures.internal.content'
  | 'topic.measures.internal.contentDigest'
  | 'topic.measures.internal.description'
  | 'topic.measures.internal.fieldOwners'
  | 'topic.measures.internal.ignoreType'
  | 'topic.measures.internal.mediaType'
  | 'topic.measures.internal.owner'
  | 'topic.measures.internal.type'
  | 'topic.measures.name'
  | 'topic.measures.parent.children'
  | 'topic.measures.parent.id'
  | 'topic.measures.publishedAt'
  | 'topic.measures.slug'
  | 'topic.measures.strapi_id'
  | 'topic.measures.topic.children'
  | 'topic.measures.topic.childrenStrapiTopicDescriptionTextnode'
  | 'topic.measures.topic.createdAt'
  | 'topic.measures.topic.gatsbyPath'
  | 'topic.measures.topic.id'
  | 'topic.measures.topic.measures'
  | 'topic.measures.topic.name'
  | 'topic.measures.topic.publishedAt'
  | 'topic.measures.topic.slug'
  | 'topic.measures.topic.strapi_id'
  | 'topic.measures.topic.updatedAt'
  | 'topic.measures.updatedAt'
  | 'topic.name'
  | 'topic.parent.children'
  | 'topic.parent.children.children'
  | 'topic.parent.children.id'
  | 'topic.parent.id'
  | 'topic.parent.internal.content'
  | 'topic.parent.internal.contentDigest'
  | 'topic.parent.internal.description'
  | 'topic.parent.internal.fieldOwners'
  | 'topic.parent.internal.ignoreType'
  | 'topic.parent.internal.mediaType'
  | 'topic.parent.internal.owner'
  | 'topic.parent.internal.type'
  | 'topic.parent.parent.children'
  | 'topic.parent.parent.id'
  | 'topic.publishedAt'
  | 'topic.slug'
  | 'topic.strapi_id'
  | 'topic.updatedAt'
  | 'updatedAt';

type STRAPI_MEASUREFilterInput = {
  readonly childStrapiMeasureDescriptionTextnode: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenStrapiMeasureDescriptionTextnode: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterListInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<STRAPI_MEASUREDescriptionFilterInput>;
  readonly examples: InputMaybe<STRAPI_EXAMPLEFilterListInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<STRAPI__MEDIAFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<DateQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly topic: InputMaybe<STRAPI_TOPICFilterInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type STRAPI_MEASUREFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_MEASUREFilterInput>;
};

type STRAPI_MEASUREGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_MEASUREEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_MEASUREGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_MEASURE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_MEASUREGroupConnection_distinctArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREGroupConnection_groupArgs = {
  field: STRAPI_MEASUREFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_MEASUREGroupConnection_maxArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREGroupConnection_minArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};


type STRAPI_MEASUREGroupConnection_sumArgs = {
  field: STRAPI_MEASUREFieldsEnum;
};

type STRAPI_MEASURESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_MEASUREFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODE = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection_groupArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection_maxArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection_minArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEConnection_sumArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
  readonly node: STRAPI_MEASURE_DESCRIPTION_TEXTNODE;
  readonly previous: Maybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_MEASURE_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_MEASURE_DESCRIPTION_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_MEASURE_DESCRIPTION_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_MEASURE_DESCRIPTION_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_TOPIC = Node & {
  /** Returns the first child node of type STRAPI_TOPIC_DESCRIPTION_TEXTNODE or null if there are no children of given type on this node */
  readonly childStrapiTopicDescriptionTextnode: Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type STRAPI_TOPIC_DESCRIPTION_TEXTNODE */
  readonly childrenStrapiTopicDescriptionTextnode: Maybe<ReadonlyArray<Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>>>;
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly description: Maybe<STRAPI_TOPICDescription>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<STRAPI__MEDIA>;
  readonly internal: Internal;
  readonly measures: Maybe<ReadonlyArray<Maybe<STRAPI_MEASURE>>>;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly publishedAt: Maybe<Scalars['Date']>;
  readonly slug: Maybe<Scalars['String']>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type STRAPI_TOPIC_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_TOPIC_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};


type STRAPI_TOPIC_publishedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI_TOPIC_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type STRAPI_TOPICConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_TOPICEdge>;
  readonly group: ReadonlyArray<STRAPI_TOPICGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_TOPIC>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_TOPICConnection_distinctArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICConnection_groupArgs = {
  field: STRAPI_TOPICFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_TOPICConnection_maxArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICConnection_minArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICConnection_sumArgs = {
  field: STRAPI_TOPICFieldsEnum;
};

type STRAPI_TOPICDescription = {
  readonly data: Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
};

type STRAPI_TOPICDescriptionFilterInput = {
  readonly data: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_TOPICEdge = {
  readonly next: Maybe<STRAPI_TOPIC>;
  readonly node: STRAPI_TOPIC;
  readonly previous: Maybe<STRAPI_TOPIC>;
};

type STRAPI_TOPICFieldsEnum =
  | 'childStrapiTopicDescriptionTextnode.children'
  | 'childStrapiTopicDescriptionTextnode.children.children'
  | 'childStrapiTopicDescriptionTextnode.children.children.children'
  | 'childStrapiTopicDescriptionTextnode.children.children.id'
  | 'childStrapiTopicDescriptionTextnode.children.id'
  | 'childStrapiTopicDescriptionTextnode.children.internal.content'
  | 'childStrapiTopicDescriptionTextnode.children.internal.contentDigest'
  | 'childStrapiTopicDescriptionTextnode.children.internal.description'
  | 'childStrapiTopicDescriptionTextnode.children.internal.fieldOwners'
  | 'childStrapiTopicDescriptionTextnode.children.internal.ignoreType'
  | 'childStrapiTopicDescriptionTextnode.children.internal.mediaType'
  | 'childStrapiTopicDescriptionTextnode.children.internal.owner'
  | 'childStrapiTopicDescriptionTextnode.children.internal.type'
  | 'childStrapiTopicDescriptionTextnode.children.parent.children'
  | 'childStrapiTopicDescriptionTextnode.children.parent.id'
  | 'childStrapiTopicDescriptionTextnode.description'
  | 'childStrapiTopicDescriptionTextnode.id'
  | 'childStrapiTopicDescriptionTextnode.internal.content'
  | 'childStrapiTopicDescriptionTextnode.internal.contentDigest'
  | 'childStrapiTopicDescriptionTextnode.internal.description'
  | 'childStrapiTopicDescriptionTextnode.internal.fieldOwners'
  | 'childStrapiTopicDescriptionTextnode.internal.ignoreType'
  | 'childStrapiTopicDescriptionTextnode.internal.mediaType'
  | 'childStrapiTopicDescriptionTextnode.internal.owner'
  | 'childStrapiTopicDescriptionTextnode.internal.type'
  | 'childStrapiTopicDescriptionTextnode.parent.children'
  | 'childStrapiTopicDescriptionTextnode.parent.children.children'
  | 'childStrapiTopicDescriptionTextnode.parent.children.id'
  | 'childStrapiTopicDescriptionTextnode.parent.id'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.content'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.contentDigest'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.description'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.fieldOwners'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.ignoreType'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.mediaType'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.owner'
  | 'childStrapiTopicDescriptionTextnode.parent.internal.type'
  | 'childStrapiTopicDescriptionTextnode.parent.parent.children'
  | 'childStrapiTopicDescriptionTextnode.parent.parent.id'
  | 'children'
  | 'childrenStrapiTopicDescriptionTextnode'
  | 'childrenStrapiTopicDescriptionTextnode.children'
  | 'childrenStrapiTopicDescriptionTextnode.children.children'
  | 'childrenStrapiTopicDescriptionTextnode.children.children.children'
  | 'childrenStrapiTopicDescriptionTextnode.children.children.id'
  | 'childrenStrapiTopicDescriptionTextnode.children.id'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.content'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.contentDigest'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.description'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.fieldOwners'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.ignoreType'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.mediaType'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.owner'
  | 'childrenStrapiTopicDescriptionTextnode.children.internal.type'
  | 'childrenStrapiTopicDescriptionTextnode.children.parent.children'
  | 'childrenStrapiTopicDescriptionTextnode.children.parent.id'
  | 'childrenStrapiTopicDescriptionTextnode.description'
  | 'childrenStrapiTopicDescriptionTextnode.id'
  | 'childrenStrapiTopicDescriptionTextnode.internal.content'
  | 'childrenStrapiTopicDescriptionTextnode.internal.contentDigest'
  | 'childrenStrapiTopicDescriptionTextnode.internal.description'
  | 'childrenStrapiTopicDescriptionTextnode.internal.fieldOwners'
  | 'childrenStrapiTopicDescriptionTextnode.internal.ignoreType'
  | 'childrenStrapiTopicDescriptionTextnode.internal.mediaType'
  | 'childrenStrapiTopicDescriptionTextnode.internal.owner'
  | 'childrenStrapiTopicDescriptionTextnode.internal.type'
  | 'childrenStrapiTopicDescriptionTextnode.parent.children'
  | 'childrenStrapiTopicDescriptionTextnode.parent.children.children'
  | 'childrenStrapiTopicDescriptionTextnode.parent.children.id'
  | 'childrenStrapiTopicDescriptionTextnode.parent.id'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.content'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.contentDigest'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.description'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.fieldOwners'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.ignoreType'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.mediaType'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.owner'
  | 'childrenStrapiTopicDescriptionTextnode.parent.internal.type'
  | 'childrenStrapiTopicDescriptionTextnode.parent.parent.children'
  | 'childrenStrapiTopicDescriptionTextnode.parent.parent.id'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'description.data.children'
  | 'description.data.children.children'
  | 'description.data.children.id'
  | 'description.data.description'
  | 'description.data.id'
  | 'description.data.internal.content'
  | 'description.data.internal.contentDigest'
  | 'description.data.internal.description'
  | 'description.data.internal.fieldOwners'
  | 'description.data.internal.ignoreType'
  | 'description.data.internal.mediaType'
  | 'description.data.internal.owner'
  | 'description.data.internal.type'
  | 'description.data.parent.children'
  | 'description.data.parent.id'
  | 'gatsbyPath'
  | 'id'
  | 'image.alternativeText'
  | 'image.caption'
  | 'image.children'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.createdAt'
  | 'image.ext'
  | 'image.formats.small.ext'
  | 'image.formats.small.hash'
  | 'image.formats.small.height'
  | 'image.formats.small.mime'
  | 'image.formats.small.name'
  | 'image.formats.small.size'
  | 'image.formats.small.url'
  | 'image.formats.small.width'
  | 'image.formats.thumbnail.ext'
  | 'image.formats.thumbnail.hash'
  | 'image.formats.thumbnail.height'
  | 'image.formats.thumbnail.mime'
  | 'image.formats.thumbnail.name'
  | 'image.formats.thumbnail.size'
  | 'image.formats.thumbnail.url'
  | 'image.formats.thumbnail.width'
  | 'image.hash'
  | 'image.height'
  | 'image.id'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.localFile.absolutePath'
  | 'image.localFile.accessTime'
  | 'image.localFile.atime'
  | 'image.localFile.atimeMs'
  | 'image.localFile.base'
  | 'image.localFile.birthTime'
  | 'image.localFile.birthtime'
  | 'image.localFile.birthtimeMs'
  | 'image.localFile.blksize'
  | 'image.localFile.blocks'
  | 'image.localFile.changeTime'
  | 'image.localFile.childImageSharp.children'
  | 'image.localFile.childImageSharp.gatsbyImageData'
  | 'image.localFile.childImageSharp.id'
  | 'image.localFile.children'
  | 'image.localFile.childrenImageSharp'
  | 'image.localFile.childrenImageSharp.children'
  | 'image.localFile.childrenImageSharp.gatsbyImageData'
  | 'image.localFile.childrenImageSharp.id'
  | 'image.localFile.children.children'
  | 'image.localFile.children.id'
  | 'image.localFile.ctime'
  | 'image.localFile.ctimeMs'
  | 'image.localFile.dev'
  | 'image.localFile.dir'
  | 'image.localFile.ext'
  | 'image.localFile.extension'
  | 'image.localFile.gid'
  | 'image.localFile.id'
  | 'image.localFile.ino'
  | 'image.localFile.internal.content'
  | 'image.localFile.internal.contentDigest'
  | 'image.localFile.internal.description'
  | 'image.localFile.internal.fieldOwners'
  | 'image.localFile.internal.ignoreType'
  | 'image.localFile.internal.mediaType'
  | 'image.localFile.internal.owner'
  | 'image.localFile.internal.type'
  | 'image.localFile.mode'
  | 'image.localFile.modifiedTime'
  | 'image.localFile.mtime'
  | 'image.localFile.mtimeMs'
  | 'image.localFile.name'
  | 'image.localFile.nlink'
  | 'image.localFile.parent.children'
  | 'image.localFile.parent.id'
  | 'image.localFile.prettySize'
  | 'image.localFile.rdev'
  | 'image.localFile.relativeDirectory'
  | 'image.localFile.relativePath'
  | 'image.localFile.root'
  | 'image.localFile.size'
  | 'image.localFile.sourceInstanceName'
  | 'image.localFile.uid'
  | 'image.localFile.url'
  | 'image.mime'
  | 'image.name'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.size'
  | 'image.strapi_id'
  | 'image.updatedAt'
  | 'image.url'
  | 'image.width'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'measures'
  | 'measures.childStrapiMeasureDescriptionTextnode.children'
  | 'measures.childStrapiMeasureDescriptionTextnode.children.children'
  | 'measures.childStrapiMeasureDescriptionTextnode.children.id'
  | 'measures.childStrapiMeasureDescriptionTextnode.description'
  | 'measures.childStrapiMeasureDescriptionTextnode.id'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.content'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.description'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.owner'
  | 'measures.childStrapiMeasureDescriptionTextnode.internal.type'
  | 'measures.childStrapiMeasureDescriptionTextnode.parent.children'
  | 'measures.childStrapiMeasureDescriptionTextnode.parent.id'
  | 'measures.children'
  | 'measures.childrenStrapiMeasureDescriptionTextnode'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.children'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.children.children'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.children.id'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.description'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.id'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.content'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.contentDigest'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.description'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.fieldOwners'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.ignoreType'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.mediaType'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.owner'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.internal.type'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.parent.children'
  | 'measures.childrenStrapiMeasureDescriptionTextnode.parent.id'
  | 'measures.children.children'
  | 'measures.children.children.children'
  | 'measures.children.children.id'
  | 'measures.children.id'
  | 'measures.children.internal.content'
  | 'measures.children.internal.contentDigest'
  | 'measures.children.internal.description'
  | 'measures.children.internal.fieldOwners'
  | 'measures.children.internal.ignoreType'
  | 'measures.children.internal.mediaType'
  | 'measures.children.internal.owner'
  | 'measures.children.internal.type'
  | 'measures.children.parent.children'
  | 'measures.children.parent.id'
  | 'measures.createdAt'
  | 'measures.description.data.children'
  | 'measures.description.data.description'
  | 'measures.description.data.id'
  | 'measures.examples'
  | 'measures.examples.childStrapiExampleAwardTextnode.award'
  | 'measures.examples.childStrapiExampleAwardTextnode.children'
  | 'measures.examples.childStrapiExampleAwardTextnode.id'
  | 'measures.examples.childStrapiExampleDescriptionTextnode.children'
  | 'measures.examples.childStrapiExampleDescriptionTextnode.description'
  | 'measures.examples.childStrapiExampleDescriptionTextnode.id'
  | 'measures.examples.childStrapiExampleRelatedofficeTextnode.children'
  | 'measures.examples.childStrapiExampleRelatedofficeTextnode.id'
  | 'measures.examples.childStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'measures.examples.childStrapiExampleStakeholdersTextnode.children'
  | 'measures.examples.childStrapiExampleStakeholdersTextnode.id'
  | 'measures.examples.childStrapiExampleStakeholdersTextnode.stakeholders'
  | 'measures.examples.children'
  | 'measures.examples.childrenStrapiExampleAwardTextnode'
  | 'measures.examples.childrenStrapiExampleAwardTextnode.award'
  | 'measures.examples.childrenStrapiExampleAwardTextnode.children'
  | 'measures.examples.childrenStrapiExampleAwardTextnode.id'
  | 'measures.examples.childrenStrapiExampleDescriptionTextnode'
  | 'measures.examples.childrenStrapiExampleDescriptionTextnode.children'
  | 'measures.examples.childrenStrapiExampleDescriptionTextnode.description'
  | 'measures.examples.childrenStrapiExampleDescriptionTextnode.id'
  | 'measures.examples.childrenStrapiExampleRelatedofficeTextnode'
  | 'measures.examples.childrenStrapiExampleRelatedofficeTextnode.children'
  | 'measures.examples.childrenStrapiExampleRelatedofficeTextnode.id'
  | 'measures.examples.childrenStrapiExampleRelatedofficeTextnode.relatedOffice'
  | 'measures.examples.childrenStrapiExampleStakeholdersTextnode'
  | 'measures.examples.childrenStrapiExampleStakeholdersTextnode.children'
  | 'measures.examples.childrenStrapiExampleStakeholdersTextnode.id'
  | 'measures.examples.childrenStrapiExampleStakeholdersTextnode.stakeholders'
  | 'measures.examples.children.children'
  | 'measures.examples.children.id'
  | 'measures.examples.commune'
  | 'measures.examples.countryState'
  | 'measures.examples.createdAt'
  | 'measures.examples.evaluation.children'
  | 'measures.examples.evaluation.id'
  | 'measures.examples.evaluation.strapi_id'
  | 'measures.examples.funding'
  | 'measures.examples.gatsbyPath'
  | 'measures.examples.id'
  | 'measures.examples.image.alternativeText'
  | 'measures.examples.image.caption'
  | 'measures.examples.image.children'
  | 'measures.examples.image.createdAt'
  | 'measures.examples.image.ext'
  | 'measures.examples.image.hash'
  | 'measures.examples.image.height'
  | 'measures.examples.image.id'
  | 'measures.examples.image.mime'
  | 'measures.examples.image.name'
  | 'measures.examples.image.size'
  | 'measures.examples.image.strapi_id'
  | 'measures.examples.image.updatedAt'
  | 'measures.examples.image.url'
  | 'measures.examples.image.width'
  | 'measures.examples.internal.content'
  | 'measures.examples.internal.contentDigest'
  | 'measures.examples.internal.description'
  | 'measures.examples.internal.fieldOwners'
  | 'measures.examples.internal.ignoreType'
  | 'measures.examples.internal.mediaType'
  | 'measures.examples.internal.owner'
  | 'measures.examples.internal.type'
  | 'measures.examples.links'
  | 'measures.examples.links.children'
  | 'measures.examples.links.display'
  | 'measures.examples.links.id'
  | 'measures.examples.links.strapi_id'
  | 'measures.examples.links.url'
  | 'measures.examples.localChallanges'
  | 'measures.examples.measure.children'
  | 'measures.examples.measure.childrenStrapiMeasureDescriptionTextnode'
  | 'measures.examples.measure.createdAt'
  | 'measures.examples.measure.examples'
  | 'measures.examples.measure.gatsbyPath'
  | 'measures.examples.measure.id'
  | 'measures.examples.measure.name'
  | 'measures.examples.measure.publishedAt'
  | 'measures.examples.measure.slug'
  | 'measures.examples.measure.strapi_id'
  | 'measures.examples.measure.updatedAt'
  | 'measures.examples.name'
  | 'measures.examples.parent.children'
  | 'measures.examples.parent.id'
  | 'measures.examples.period'
  | 'measures.examples.population'
  | 'measures.examples.publishedAt'
  | 'measures.examples.shortDescription'
  | 'measures.examples.slug'
  | 'measures.examples.spatialStructure'
  | 'measures.examples.state'
  | 'measures.examples.strapi_id'
  | 'measures.examples.targetGroup'
  | 'measures.examples.updatedAt'
  | 'measures.gatsbyPath'
  | 'measures.id'
  | 'measures.image.alternativeText'
  | 'measures.image.caption'
  | 'measures.image.children'
  | 'measures.image.children.children'
  | 'measures.image.children.id'
  | 'measures.image.createdAt'
  | 'measures.image.ext'
  | 'measures.image.hash'
  | 'measures.image.height'
  | 'measures.image.id'
  | 'measures.image.internal.content'
  | 'measures.image.internal.contentDigest'
  | 'measures.image.internal.description'
  | 'measures.image.internal.fieldOwners'
  | 'measures.image.internal.ignoreType'
  | 'measures.image.internal.mediaType'
  | 'measures.image.internal.owner'
  | 'measures.image.internal.type'
  | 'measures.image.localFile.absolutePath'
  | 'measures.image.localFile.accessTime'
  | 'measures.image.localFile.atime'
  | 'measures.image.localFile.atimeMs'
  | 'measures.image.localFile.base'
  | 'measures.image.localFile.birthTime'
  | 'measures.image.localFile.birthtime'
  | 'measures.image.localFile.birthtimeMs'
  | 'measures.image.localFile.blksize'
  | 'measures.image.localFile.blocks'
  | 'measures.image.localFile.changeTime'
  | 'measures.image.localFile.children'
  | 'measures.image.localFile.childrenImageSharp'
  | 'measures.image.localFile.ctime'
  | 'measures.image.localFile.ctimeMs'
  | 'measures.image.localFile.dev'
  | 'measures.image.localFile.dir'
  | 'measures.image.localFile.ext'
  | 'measures.image.localFile.extension'
  | 'measures.image.localFile.gid'
  | 'measures.image.localFile.id'
  | 'measures.image.localFile.ino'
  | 'measures.image.localFile.mode'
  | 'measures.image.localFile.modifiedTime'
  | 'measures.image.localFile.mtime'
  | 'measures.image.localFile.mtimeMs'
  | 'measures.image.localFile.name'
  | 'measures.image.localFile.nlink'
  | 'measures.image.localFile.prettySize'
  | 'measures.image.localFile.rdev'
  | 'measures.image.localFile.relativeDirectory'
  | 'measures.image.localFile.relativePath'
  | 'measures.image.localFile.root'
  | 'measures.image.localFile.size'
  | 'measures.image.localFile.sourceInstanceName'
  | 'measures.image.localFile.uid'
  | 'measures.image.localFile.url'
  | 'measures.image.mime'
  | 'measures.image.name'
  | 'measures.image.parent.children'
  | 'measures.image.parent.id'
  | 'measures.image.size'
  | 'measures.image.strapi_id'
  | 'measures.image.updatedAt'
  | 'measures.image.url'
  | 'measures.image.width'
  | 'measures.internal.content'
  | 'measures.internal.contentDigest'
  | 'measures.internal.description'
  | 'measures.internal.fieldOwners'
  | 'measures.internal.ignoreType'
  | 'measures.internal.mediaType'
  | 'measures.internal.owner'
  | 'measures.internal.type'
  | 'measures.name'
  | 'measures.parent.children'
  | 'measures.parent.children.children'
  | 'measures.parent.children.id'
  | 'measures.parent.id'
  | 'measures.parent.internal.content'
  | 'measures.parent.internal.contentDigest'
  | 'measures.parent.internal.description'
  | 'measures.parent.internal.fieldOwners'
  | 'measures.parent.internal.ignoreType'
  | 'measures.parent.internal.mediaType'
  | 'measures.parent.internal.owner'
  | 'measures.parent.internal.type'
  | 'measures.parent.parent.children'
  | 'measures.parent.parent.id'
  | 'measures.publishedAt'
  | 'measures.slug'
  | 'measures.strapi_id'
  | 'measures.topic.childStrapiTopicDescriptionTextnode.children'
  | 'measures.topic.childStrapiTopicDescriptionTextnode.description'
  | 'measures.topic.childStrapiTopicDescriptionTextnode.id'
  | 'measures.topic.children'
  | 'measures.topic.childrenStrapiTopicDescriptionTextnode'
  | 'measures.topic.childrenStrapiTopicDescriptionTextnode.children'
  | 'measures.topic.childrenStrapiTopicDescriptionTextnode.description'
  | 'measures.topic.childrenStrapiTopicDescriptionTextnode.id'
  | 'measures.topic.children.children'
  | 'measures.topic.children.id'
  | 'measures.topic.createdAt'
  | 'measures.topic.gatsbyPath'
  | 'measures.topic.id'
  | 'measures.topic.image.alternativeText'
  | 'measures.topic.image.caption'
  | 'measures.topic.image.children'
  | 'measures.topic.image.createdAt'
  | 'measures.topic.image.ext'
  | 'measures.topic.image.hash'
  | 'measures.topic.image.height'
  | 'measures.topic.image.id'
  | 'measures.topic.image.mime'
  | 'measures.topic.image.name'
  | 'measures.topic.image.size'
  | 'measures.topic.image.strapi_id'
  | 'measures.topic.image.updatedAt'
  | 'measures.topic.image.url'
  | 'measures.topic.image.width'
  | 'measures.topic.internal.content'
  | 'measures.topic.internal.contentDigest'
  | 'measures.topic.internal.description'
  | 'measures.topic.internal.fieldOwners'
  | 'measures.topic.internal.ignoreType'
  | 'measures.topic.internal.mediaType'
  | 'measures.topic.internal.owner'
  | 'measures.topic.internal.type'
  | 'measures.topic.measures'
  | 'measures.topic.measures.children'
  | 'measures.topic.measures.childrenStrapiMeasureDescriptionTextnode'
  | 'measures.topic.measures.createdAt'
  | 'measures.topic.measures.examples'
  | 'measures.topic.measures.gatsbyPath'
  | 'measures.topic.measures.id'
  | 'measures.topic.measures.name'
  | 'measures.topic.measures.publishedAt'
  | 'measures.topic.measures.slug'
  | 'measures.topic.measures.strapi_id'
  | 'measures.topic.measures.updatedAt'
  | 'measures.topic.name'
  | 'measures.topic.parent.children'
  | 'measures.topic.parent.id'
  | 'measures.topic.publishedAt'
  | 'measures.topic.slug'
  | 'measures.topic.strapi_id'
  | 'measures.topic.updatedAt'
  | 'measures.updatedAt'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'publishedAt'
  | 'slug'
  | 'strapi_id'
  | 'updatedAt';

type STRAPI_TOPICFilterInput = {
  readonly childStrapiTopicDescriptionTextnode: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenStrapiTopicDescriptionTextnode: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterListInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<STRAPI_TOPICDescriptionFilterInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<STRAPI__MEDIAFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly measures: InputMaybe<STRAPI_MEASUREFilterListInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly publishedAt: InputMaybe<DateQueryOperatorInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type STRAPI_TOPICGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_TOPICEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_TOPICGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_TOPIC>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_TOPICGroupConnection_distinctArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICGroupConnection_groupArgs = {
  field: STRAPI_TOPICFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_TOPICGroupConnection_maxArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICGroupConnection_minArgs = {
  field: STRAPI_TOPICFieldsEnum;
};


type STRAPI_TOPICGroupConnection_sumArgs = {
  field: STRAPI_TOPICFieldsEnum;
};

type STRAPI_TOPICSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_TOPICFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODE = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODEEdge>;
  readonly group: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection_distinctArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection_groupArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection_maxArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection_minArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEConnection_sumArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEEdge = {
  readonly next: Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
  readonly node: STRAPI_TOPIC_DESCRIPTION_TEXTNODE;
  readonly previous: Maybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFilterInput>;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODEEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI_TOPIC_DESCRIPTION_TEXTNODE>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection_distinctArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection_groupArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection_maxArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection_minArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};


type STRAPI_TOPIC_DESCRIPTION_TEXTNODEGroupConnection_sumArgs = {
  field: STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum;
};

type STRAPI_TOPIC_DESCRIPTION_TEXTNODESortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI_TOPIC_DESCRIPTION_TEXTNODEFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly percent: Maybe<Scalars['Int']>;
  readonly strapi_id: Maybe<Scalars['Int']>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATIONEdge>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection_distinctArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection_groupArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection_maxArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection_minArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONConnection_sumArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATIONEdge = {
  readonly next: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly node: STRAPI__COMPONENT_EVALUATION_EVALUATION;
  readonly previous: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'percent'
  | 'strapi_id';

type STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly percent: InputMaybe<IntQueryOperatorInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATIONEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection_distinctArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection_groupArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection_maxArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection_minArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATIONGroupConnection_sumArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATIONSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP = Node & {
  readonly accessibility: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly children: ReadonlyArray<Node>;
  readonly effectiveness: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly effort: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly evaluability: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly execution: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly participation: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly portability: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly synergies: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPEdge>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection_distinctArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection_groupArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection_maxArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection_minArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPConnection_sumArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPEdge = {
  readonly next: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
  readonly node: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP;
  readonly previous: Maybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum =
  | 'accessibility.children'
  | 'accessibility.children.children'
  | 'accessibility.children.children.children'
  | 'accessibility.children.children.id'
  | 'accessibility.children.id'
  | 'accessibility.children.internal.content'
  | 'accessibility.children.internal.contentDigest'
  | 'accessibility.children.internal.description'
  | 'accessibility.children.internal.fieldOwners'
  | 'accessibility.children.internal.ignoreType'
  | 'accessibility.children.internal.mediaType'
  | 'accessibility.children.internal.owner'
  | 'accessibility.children.internal.type'
  | 'accessibility.children.parent.children'
  | 'accessibility.children.parent.id'
  | 'accessibility.description'
  | 'accessibility.id'
  | 'accessibility.internal.content'
  | 'accessibility.internal.contentDigest'
  | 'accessibility.internal.description'
  | 'accessibility.internal.fieldOwners'
  | 'accessibility.internal.ignoreType'
  | 'accessibility.internal.mediaType'
  | 'accessibility.internal.owner'
  | 'accessibility.internal.type'
  | 'accessibility.parent.children'
  | 'accessibility.parent.children.children'
  | 'accessibility.parent.children.id'
  | 'accessibility.parent.id'
  | 'accessibility.parent.internal.content'
  | 'accessibility.parent.internal.contentDigest'
  | 'accessibility.parent.internal.description'
  | 'accessibility.parent.internal.fieldOwners'
  | 'accessibility.parent.internal.ignoreType'
  | 'accessibility.parent.internal.mediaType'
  | 'accessibility.parent.internal.owner'
  | 'accessibility.parent.internal.type'
  | 'accessibility.parent.parent.children'
  | 'accessibility.parent.parent.id'
  | 'accessibility.percent'
  | 'accessibility.strapi_id'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'effectiveness.children'
  | 'effectiveness.children.children'
  | 'effectiveness.children.children.children'
  | 'effectiveness.children.children.id'
  | 'effectiveness.children.id'
  | 'effectiveness.children.internal.content'
  | 'effectiveness.children.internal.contentDigest'
  | 'effectiveness.children.internal.description'
  | 'effectiveness.children.internal.fieldOwners'
  | 'effectiveness.children.internal.ignoreType'
  | 'effectiveness.children.internal.mediaType'
  | 'effectiveness.children.internal.owner'
  | 'effectiveness.children.internal.type'
  | 'effectiveness.children.parent.children'
  | 'effectiveness.children.parent.id'
  | 'effectiveness.description'
  | 'effectiveness.id'
  | 'effectiveness.internal.content'
  | 'effectiveness.internal.contentDigest'
  | 'effectiveness.internal.description'
  | 'effectiveness.internal.fieldOwners'
  | 'effectiveness.internal.ignoreType'
  | 'effectiveness.internal.mediaType'
  | 'effectiveness.internal.owner'
  | 'effectiveness.internal.type'
  | 'effectiveness.parent.children'
  | 'effectiveness.parent.children.children'
  | 'effectiveness.parent.children.id'
  | 'effectiveness.parent.id'
  | 'effectiveness.parent.internal.content'
  | 'effectiveness.parent.internal.contentDigest'
  | 'effectiveness.parent.internal.description'
  | 'effectiveness.parent.internal.fieldOwners'
  | 'effectiveness.parent.internal.ignoreType'
  | 'effectiveness.parent.internal.mediaType'
  | 'effectiveness.parent.internal.owner'
  | 'effectiveness.parent.internal.type'
  | 'effectiveness.parent.parent.children'
  | 'effectiveness.parent.parent.id'
  | 'effectiveness.percent'
  | 'effectiveness.strapi_id'
  | 'effort.children'
  | 'effort.children.children'
  | 'effort.children.children.children'
  | 'effort.children.children.id'
  | 'effort.children.id'
  | 'effort.children.internal.content'
  | 'effort.children.internal.contentDigest'
  | 'effort.children.internal.description'
  | 'effort.children.internal.fieldOwners'
  | 'effort.children.internal.ignoreType'
  | 'effort.children.internal.mediaType'
  | 'effort.children.internal.owner'
  | 'effort.children.internal.type'
  | 'effort.children.parent.children'
  | 'effort.children.parent.id'
  | 'effort.description'
  | 'effort.id'
  | 'effort.internal.content'
  | 'effort.internal.contentDigest'
  | 'effort.internal.description'
  | 'effort.internal.fieldOwners'
  | 'effort.internal.ignoreType'
  | 'effort.internal.mediaType'
  | 'effort.internal.owner'
  | 'effort.internal.type'
  | 'effort.parent.children'
  | 'effort.parent.children.children'
  | 'effort.parent.children.id'
  | 'effort.parent.id'
  | 'effort.parent.internal.content'
  | 'effort.parent.internal.contentDigest'
  | 'effort.parent.internal.description'
  | 'effort.parent.internal.fieldOwners'
  | 'effort.parent.internal.ignoreType'
  | 'effort.parent.internal.mediaType'
  | 'effort.parent.internal.owner'
  | 'effort.parent.internal.type'
  | 'effort.parent.parent.children'
  | 'effort.parent.parent.id'
  | 'effort.percent'
  | 'effort.strapi_id'
  | 'evaluability.children'
  | 'evaluability.children.children'
  | 'evaluability.children.children.children'
  | 'evaluability.children.children.id'
  | 'evaluability.children.id'
  | 'evaluability.children.internal.content'
  | 'evaluability.children.internal.contentDigest'
  | 'evaluability.children.internal.description'
  | 'evaluability.children.internal.fieldOwners'
  | 'evaluability.children.internal.ignoreType'
  | 'evaluability.children.internal.mediaType'
  | 'evaluability.children.internal.owner'
  | 'evaluability.children.internal.type'
  | 'evaluability.children.parent.children'
  | 'evaluability.children.parent.id'
  | 'evaluability.description'
  | 'evaluability.id'
  | 'evaluability.internal.content'
  | 'evaluability.internal.contentDigest'
  | 'evaluability.internal.description'
  | 'evaluability.internal.fieldOwners'
  | 'evaluability.internal.ignoreType'
  | 'evaluability.internal.mediaType'
  | 'evaluability.internal.owner'
  | 'evaluability.internal.type'
  | 'evaluability.parent.children'
  | 'evaluability.parent.children.children'
  | 'evaluability.parent.children.id'
  | 'evaluability.parent.id'
  | 'evaluability.parent.internal.content'
  | 'evaluability.parent.internal.contentDigest'
  | 'evaluability.parent.internal.description'
  | 'evaluability.parent.internal.fieldOwners'
  | 'evaluability.parent.internal.ignoreType'
  | 'evaluability.parent.internal.mediaType'
  | 'evaluability.parent.internal.owner'
  | 'evaluability.parent.internal.type'
  | 'evaluability.parent.parent.children'
  | 'evaluability.parent.parent.id'
  | 'evaluability.percent'
  | 'evaluability.strapi_id'
  | 'execution.children'
  | 'execution.children.children'
  | 'execution.children.children.children'
  | 'execution.children.children.id'
  | 'execution.children.id'
  | 'execution.children.internal.content'
  | 'execution.children.internal.contentDigest'
  | 'execution.children.internal.description'
  | 'execution.children.internal.fieldOwners'
  | 'execution.children.internal.ignoreType'
  | 'execution.children.internal.mediaType'
  | 'execution.children.internal.owner'
  | 'execution.children.internal.type'
  | 'execution.children.parent.children'
  | 'execution.children.parent.id'
  | 'execution.description'
  | 'execution.id'
  | 'execution.internal.content'
  | 'execution.internal.contentDigest'
  | 'execution.internal.description'
  | 'execution.internal.fieldOwners'
  | 'execution.internal.ignoreType'
  | 'execution.internal.mediaType'
  | 'execution.internal.owner'
  | 'execution.internal.type'
  | 'execution.parent.children'
  | 'execution.parent.children.children'
  | 'execution.parent.children.id'
  | 'execution.parent.id'
  | 'execution.parent.internal.content'
  | 'execution.parent.internal.contentDigest'
  | 'execution.parent.internal.description'
  | 'execution.parent.internal.fieldOwners'
  | 'execution.parent.internal.ignoreType'
  | 'execution.parent.internal.mediaType'
  | 'execution.parent.internal.owner'
  | 'execution.parent.internal.type'
  | 'execution.parent.parent.children'
  | 'execution.parent.parent.id'
  | 'execution.percent'
  | 'execution.strapi_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'participation.children'
  | 'participation.children.children'
  | 'participation.children.children.children'
  | 'participation.children.children.id'
  | 'participation.children.id'
  | 'participation.children.internal.content'
  | 'participation.children.internal.contentDigest'
  | 'participation.children.internal.description'
  | 'participation.children.internal.fieldOwners'
  | 'participation.children.internal.ignoreType'
  | 'participation.children.internal.mediaType'
  | 'participation.children.internal.owner'
  | 'participation.children.internal.type'
  | 'participation.children.parent.children'
  | 'participation.children.parent.id'
  | 'participation.description'
  | 'participation.id'
  | 'participation.internal.content'
  | 'participation.internal.contentDigest'
  | 'participation.internal.description'
  | 'participation.internal.fieldOwners'
  | 'participation.internal.ignoreType'
  | 'participation.internal.mediaType'
  | 'participation.internal.owner'
  | 'participation.internal.type'
  | 'participation.parent.children'
  | 'participation.parent.children.children'
  | 'participation.parent.children.id'
  | 'participation.parent.id'
  | 'participation.parent.internal.content'
  | 'participation.parent.internal.contentDigest'
  | 'participation.parent.internal.description'
  | 'participation.parent.internal.fieldOwners'
  | 'participation.parent.internal.ignoreType'
  | 'participation.parent.internal.mediaType'
  | 'participation.parent.internal.owner'
  | 'participation.parent.internal.type'
  | 'participation.parent.parent.children'
  | 'participation.parent.parent.id'
  | 'participation.percent'
  | 'participation.strapi_id'
  | 'portability.children'
  | 'portability.children.children'
  | 'portability.children.children.children'
  | 'portability.children.children.id'
  | 'portability.children.id'
  | 'portability.children.internal.content'
  | 'portability.children.internal.contentDigest'
  | 'portability.children.internal.description'
  | 'portability.children.internal.fieldOwners'
  | 'portability.children.internal.ignoreType'
  | 'portability.children.internal.mediaType'
  | 'portability.children.internal.owner'
  | 'portability.children.internal.type'
  | 'portability.children.parent.children'
  | 'portability.children.parent.id'
  | 'portability.description'
  | 'portability.id'
  | 'portability.internal.content'
  | 'portability.internal.contentDigest'
  | 'portability.internal.description'
  | 'portability.internal.fieldOwners'
  | 'portability.internal.ignoreType'
  | 'portability.internal.mediaType'
  | 'portability.internal.owner'
  | 'portability.internal.type'
  | 'portability.parent.children'
  | 'portability.parent.children.children'
  | 'portability.parent.children.id'
  | 'portability.parent.id'
  | 'portability.parent.internal.content'
  | 'portability.parent.internal.contentDigest'
  | 'portability.parent.internal.description'
  | 'portability.parent.internal.fieldOwners'
  | 'portability.parent.internal.ignoreType'
  | 'portability.parent.internal.mediaType'
  | 'portability.parent.internal.owner'
  | 'portability.parent.internal.type'
  | 'portability.parent.parent.children'
  | 'portability.parent.parent.id'
  | 'portability.percent'
  | 'portability.strapi_id'
  | 'strapi_id'
  | 'synergies.children'
  | 'synergies.children.children'
  | 'synergies.children.children.children'
  | 'synergies.children.children.id'
  | 'synergies.children.id'
  | 'synergies.children.internal.content'
  | 'synergies.children.internal.contentDigest'
  | 'synergies.children.internal.description'
  | 'synergies.children.internal.fieldOwners'
  | 'synergies.children.internal.ignoreType'
  | 'synergies.children.internal.mediaType'
  | 'synergies.children.internal.owner'
  | 'synergies.children.internal.type'
  | 'synergies.children.parent.children'
  | 'synergies.children.parent.id'
  | 'synergies.description'
  | 'synergies.id'
  | 'synergies.internal.content'
  | 'synergies.internal.contentDigest'
  | 'synergies.internal.description'
  | 'synergies.internal.fieldOwners'
  | 'synergies.internal.ignoreType'
  | 'synergies.internal.mediaType'
  | 'synergies.internal.owner'
  | 'synergies.internal.type'
  | 'synergies.parent.children'
  | 'synergies.parent.children.children'
  | 'synergies.parent.children.id'
  | 'synergies.parent.id'
  | 'synergies.parent.internal.content'
  | 'synergies.parent.internal.contentDigest'
  | 'synergies.parent.internal.description'
  | 'synergies.parent.internal.fieldOwners'
  | 'synergies.parent.internal.ignoreType'
  | 'synergies.parent.internal.mediaType'
  | 'synergies.parent.internal.owner'
  | 'synergies.parent.internal.type'
  | 'synergies.parent.parent.children'
  | 'synergies.parent.parent.id'
  | 'synergies.percent'
  | 'synergies.strapi_id';

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFilterInput = {
  readonly accessibility: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly effectiveness: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly effort: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly evaluability: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly execution: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly participation: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly portability: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly synergies: InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATIONFilterInput>;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUP>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection_distinctArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection_groupArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection_maxArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection_minArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};


type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPGroupConnection_sumArgs = {
  field: STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum;
};

type STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI__COMPONENT_EVALUATION_EVALUATION_GROUPFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI__COMPONENT_LINKS_LINKS = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly display: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly url: Maybe<Scalars['String']>;
};

type STRAPI__COMPONENT_LINKS_LINKSConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKSEdge>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKSGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKS>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_LINKS_LINKSConnection_distinctArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSConnection_groupArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_LINKS_LINKSConnection_maxArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSConnection_minArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSConnection_sumArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};

type STRAPI__COMPONENT_LINKS_LINKSEdge = {
  readonly next: Maybe<STRAPI__COMPONENT_LINKS_LINKS>;
  readonly node: STRAPI__COMPONENT_LINKS_LINKS;
  readonly previous: Maybe<STRAPI__COMPONENT_LINKS_LINKS>;
};

type STRAPI__COMPONENT_LINKS_LINKSFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'display'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'strapi_id'
  | 'url';

type STRAPI__COMPONENT_LINKS_LINKSFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly display: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type STRAPI__COMPONENT_LINKS_LINKSFilterListInput = {
  readonly elemMatch: InputMaybe<STRAPI__COMPONENT_LINKS_LINKSFilterInput>;
};

type STRAPI__COMPONENT_LINKS_LINKSGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKSEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKSGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__COMPONENT_LINKS_LINKS>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__COMPONENT_LINKS_LINKSGroupConnection_distinctArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSGroupConnection_groupArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__COMPONENT_LINKS_LINKSGroupConnection_maxArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSGroupConnection_minArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};


type STRAPI__COMPONENT_LINKS_LINKSGroupConnection_sumArgs = {
  field: STRAPI__COMPONENT_LINKS_LINKSFieldsEnum;
};

type STRAPI__COMPONENT_LINKS_LINKSSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI__COMPONENT_LINKS_LINKSFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type STRAPI__MEDIA = Node & {
  readonly alternativeText: Maybe<Scalars['String']>;
  readonly caption: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly ext: Maybe<Scalars['String']>;
  readonly formats: Maybe<STRAPI__MEDIAFormats>;
  readonly hash: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly localFile: Maybe<File>;
  readonly mime: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly size: Maybe<Scalars['Float']>;
  readonly strapi_id: Maybe<Scalars['Int']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
  readonly url: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};


type STRAPI__MEDIA_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type STRAPI__MEDIA_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type STRAPI__MEDIAConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__MEDIAEdge>;
  readonly group: ReadonlyArray<STRAPI__MEDIAGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__MEDIA>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__MEDIAConnection_distinctArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAConnection_groupArgs = {
  field: STRAPI__MEDIAFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__MEDIAConnection_maxArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAConnection_minArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAConnection_sumArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};

type STRAPI__MEDIAEdge = {
  readonly next: Maybe<STRAPI__MEDIA>;
  readonly node: STRAPI__MEDIA;
  readonly previous: Maybe<STRAPI__MEDIA>;
};

type STRAPI__MEDIAFieldsEnum =
  | 'alternativeText'
  | 'caption'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'createdAt'
  | 'ext'
  | 'formats.small.ext'
  | 'formats.small.hash'
  | 'formats.small.height'
  | 'formats.small.mime'
  | 'formats.small.name'
  | 'formats.small.size'
  | 'formats.small.url'
  | 'formats.small.width'
  | 'formats.thumbnail.ext'
  | 'formats.thumbnail.hash'
  | 'formats.thumbnail.height'
  | 'formats.thumbnail.mime'
  | 'formats.thumbnail.name'
  | 'formats.thumbnail.size'
  | 'formats.thumbnail.url'
  | 'formats.thumbnail.width'
  | 'hash'
  | 'height'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'localFile.absolutePath'
  | 'localFile.accessTime'
  | 'localFile.atime'
  | 'localFile.atimeMs'
  | 'localFile.base'
  | 'localFile.birthTime'
  | 'localFile.birthtime'
  | 'localFile.birthtimeMs'
  | 'localFile.blksize'
  | 'localFile.blocks'
  | 'localFile.changeTime'
  | 'localFile.childImageSharp.children'
  | 'localFile.childImageSharp.children.children'
  | 'localFile.childImageSharp.children.id'
  | 'localFile.childImageSharp.fixed.aspectRatio'
  | 'localFile.childImageSharp.fixed.base64'
  | 'localFile.childImageSharp.fixed.height'
  | 'localFile.childImageSharp.fixed.originalName'
  | 'localFile.childImageSharp.fixed.src'
  | 'localFile.childImageSharp.fixed.srcSet'
  | 'localFile.childImageSharp.fixed.srcSetWebp'
  | 'localFile.childImageSharp.fixed.srcWebp'
  | 'localFile.childImageSharp.fixed.tracedSVG'
  | 'localFile.childImageSharp.fixed.width'
  | 'localFile.childImageSharp.fluid.aspectRatio'
  | 'localFile.childImageSharp.fluid.base64'
  | 'localFile.childImageSharp.fluid.originalImg'
  | 'localFile.childImageSharp.fluid.originalName'
  | 'localFile.childImageSharp.fluid.presentationHeight'
  | 'localFile.childImageSharp.fluid.presentationWidth'
  | 'localFile.childImageSharp.fluid.sizes'
  | 'localFile.childImageSharp.fluid.src'
  | 'localFile.childImageSharp.fluid.srcSet'
  | 'localFile.childImageSharp.fluid.srcSetWebp'
  | 'localFile.childImageSharp.fluid.srcWebp'
  | 'localFile.childImageSharp.fluid.tracedSVG'
  | 'localFile.childImageSharp.gatsbyImageData'
  | 'localFile.childImageSharp.id'
  | 'localFile.childImageSharp.internal.content'
  | 'localFile.childImageSharp.internal.contentDigest'
  | 'localFile.childImageSharp.internal.description'
  | 'localFile.childImageSharp.internal.fieldOwners'
  | 'localFile.childImageSharp.internal.ignoreType'
  | 'localFile.childImageSharp.internal.mediaType'
  | 'localFile.childImageSharp.internal.owner'
  | 'localFile.childImageSharp.internal.type'
  | 'localFile.childImageSharp.original.height'
  | 'localFile.childImageSharp.original.src'
  | 'localFile.childImageSharp.original.width'
  | 'localFile.childImageSharp.parent.children'
  | 'localFile.childImageSharp.parent.id'
  | 'localFile.childImageSharp.resize.aspectRatio'
  | 'localFile.childImageSharp.resize.height'
  | 'localFile.childImageSharp.resize.originalName'
  | 'localFile.childImageSharp.resize.src'
  | 'localFile.childImageSharp.resize.tracedSVG'
  | 'localFile.childImageSharp.resize.width'
  | 'localFile.children'
  | 'localFile.childrenImageSharp'
  | 'localFile.childrenImageSharp.children'
  | 'localFile.childrenImageSharp.children.children'
  | 'localFile.childrenImageSharp.children.id'
  | 'localFile.childrenImageSharp.fixed.aspectRatio'
  | 'localFile.childrenImageSharp.fixed.base64'
  | 'localFile.childrenImageSharp.fixed.height'
  | 'localFile.childrenImageSharp.fixed.originalName'
  | 'localFile.childrenImageSharp.fixed.src'
  | 'localFile.childrenImageSharp.fixed.srcSet'
  | 'localFile.childrenImageSharp.fixed.srcSetWebp'
  | 'localFile.childrenImageSharp.fixed.srcWebp'
  | 'localFile.childrenImageSharp.fixed.tracedSVG'
  | 'localFile.childrenImageSharp.fixed.width'
  | 'localFile.childrenImageSharp.fluid.aspectRatio'
  | 'localFile.childrenImageSharp.fluid.base64'
  | 'localFile.childrenImageSharp.fluid.originalImg'
  | 'localFile.childrenImageSharp.fluid.originalName'
  | 'localFile.childrenImageSharp.fluid.presentationHeight'
  | 'localFile.childrenImageSharp.fluid.presentationWidth'
  | 'localFile.childrenImageSharp.fluid.sizes'
  | 'localFile.childrenImageSharp.fluid.src'
  | 'localFile.childrenImageSharp.fluid.srcSet'
  | 'localFile.childrenImageSharp.fluid.srcSetWebp'
  | 'localFile.childrenImageSharp.fluid.srcWebp'
  | 'localFile.childrenImageSharp.fluid.tracedSVG'
  | 'localFile.childrenImageSharp.gatsbyImageData'
  | 'localFile.childrenImageSharp.id'
  | 'localFile.childrenImageSharp.internal.content'
  | 'localFile.childrenImageSharp.internal.contentDigest'
  | 'localFile.childrenImageSharp.internal.description'
  | 'localFile.childrenImageSharp.internal.fieldOwners'
  | 'localFile.childrenImageSharp.internal.ignoreType'
  | 'localFile.childrenImageSharp.internal.mediaType'
  | 'localFile.childrenImageSharp.internal.owner'
  | 'localFile.childrenImageSharp.internal.type'
  | 'localFile.childrenImageSharp.original.height'
  | 'localFile.childrenImageSharp.original.src'
  | 'localFile.childrenImageSharp.original.width'
  | 'localFile.childrenImageSharp.parent.children'
  | 'localFile.childrenImageSharp.parent.id'
  | 'localFile.childrenImageSharp.resize.aspectRatio'
  | 'localFile.childrenImageSharp.resize.height'
  | 'localFile.childrenImageSharp.resize.originalName'
  | 'localFile.childrenImageSharp.resize.src'
  | 'localFile.childrenImageSharp.resize.tracedSVG'
  | 'localFile.childrenImageSharp.resize.width'
  | 'localFile.children.children'
  | 'localFile.children.children.children'
  | 'localFile.children.children.id'
  | 'localFile.children.id'
  | 'localFile.children.internal.content'
  | 'localFile.children.internal.contentDigest'
  | 'localFile.children.internal.description'
  | 'localFile.children.internal.fieldOwners'
  | 'localFile.children.internal.ignoreType'
  | 'localFile.children.internal.mediaType'
  | 'localFile.children.internal.owner'
  | 'localFile.children.internal.type'
  | 'localFile.children.parent.children'
  | 'localFile.children.parent.id'
  | 'localFile.ctime'
  | 'localFile.ctimeMs'
  | 'localFile.dev'
  | 'localFile.dir'
  | 'localFile.ext'
  | 'localFile.extension'
  | 'localFile.gid'
  | 'localFile.id'
  | 'localFile.ino'
  | 'localFile.internal.content'
  | 'localFile.internal.contentDigest'
  | 'localFile.internal.description'
  | 'localFile.internal.fieldOwners'
  | 'localFile.internal.ignoreType'
  | 'localFile.internal.mediaType'
  | 'localFile.internal.owner'
  | 'localFile.internal.type'
  | 'localFile.mode'
  | 'localFile.modifiedTime'
  | 'localFile.mtime'
  | 'localFile.mtimeMs'
  | 'localFile.name'
  | 'localFile.nlink'
  | 'localFile.parent.children'
  | 'localFile.parent.children.children'
  | 'localFile.parent.children.id'
  | 'localFile.parent.id'
  | 'localFile.parent.internal.content'
  | 'localFile.parent.internal.contentDigest'
  | 'localFile.parent.internal.description'
  | 'localFile.parent.internal.fieldOwners'
  | 'localFile.parent.internal.ignoreType'
  | 'localFile.parent.internal.mediaType'
  | 'localFile.parent.internal.owner'
  | 'localFile.parent.internal.type'
  | 'localFile.parent.parent.children'
  | 'localFile.parent.parent.id'
  | 'localFile.prettySize'
  | 'localFile.rdev'
  | 'localFile.relativeDirectory'
  | 'localFile.relativePath'
  | 'localFile.root'
  | 'localFile.size'
  | 'localFile.sourceInstanceName'
  | 'localFile.uid'
  | 'localFile.url'
  | 'mime'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'size'
  | 'strapi_id'
  | 'updatedAt'
  | 'url'
  | 'width';

type STRAPI__MEDIAFilterInput = {
  readonly alternativeText: InputMaybe<StringQueryOperatorInput>;
  readonly caption: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly formats: InputMaybe<STRAPI__MEDIAFormatsFilterInput>;
  readonly hash: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly localFile: InputMaybe<FileFilterInput>;
  readonly mime: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly size: InputMaybe<FloatQueryOperatorInput>;
  readonly strapi_id: InputMaybe<IntQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type STRAPI__MEDIAFormats = {
  readonly small: Maybe<STRAPI__MEDIAFormatsSmall>;
  readonly thumbnail: Maybe<STRAPI__MEDIAFormatsThumbnail>;
};

type STRAPI__MEDIAFormatsFilterInput = {
  readonly small: InputMaybe<STRAPI__MEDIAFormatsSmallFilterInput>;
  readonly thumbnail: InputMaybe<STRAPI__MEDIAFormatsThumbnailFilterInput>;
};

type STRAPI__MEDIAFormatsSmall = {
  readonly ext: Maybe<Scalars['String']>;
  readonly hash: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly mime: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly size: Maybe<Scalars['Float']>;
  readonly url: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type STRAPI__MEDIAFormatsSmallFilterInput = {
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly hash: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly mime: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<FloatQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type STRAPI__MEDIAFormatsThumbnail = {
  readonly ext: Maybe<Scalars['String']>;
  readonly hash: Maybe<Scalars['String']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly mime: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly size: Maybe<Scalars['Float']>;
  readonly url: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type STRAPI__MEDIAFormatsThumbnailFilterInput = {
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly hash: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly mime: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<FloatQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type STRAPI__MEDIAGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<STRAPI__MEDIAEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<STRAPI__MEDIAGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<STRAPI__MEDIA>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type STRAPI__MEDIAGroupConnection_distinctArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAGroupConnection_groupArgs = {
  field: STRAPI__MEDIAFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type STRAPI__MEDIAGroupConnection_maxArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAGroupConnection_minArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};


type STRAPI__MEDIAGroupConnection_sumArgs = {
  field: STRAPI__MEDIAFieldsEnum;
};

type STRAPI__MEDIASortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<STRAPI__MEDIAFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<SiteGraphqlTypegen>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen.typesOutputPath'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.description'
  | 'siteMetadata.siteUrl'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<SiteGraphqlTypegenFilterInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGraphqlTypegen = {
  readonly typesOutputPath: Maybe<Scalars['String']>;
};

type SiteGraphqlTypegenFilterInput = {
  readonly typesOutputPath: InputMaybe<StringQueryOperatorInput>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly description: Maybe<Scalars['String']>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type ExampleDetailsQueryVariables = Exact<{
  id: Scalars['String'];
}>;


type ExampleDetailsQuery = { readonly example: { readonly name: string | null, readonly shortDescription: string | null, readonly countryState: string | null, readonly commune: string | null, readonly population: string | null, readonly spatialStructure: string | null, readonly localChallanges: string | null, readonly state: string | null, readonly period: string | null, readonly targetGroup: string | null, readonly funding: string | null, readonly slug: string | null, readonly image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null, readonly description: { readonly data: { readonly description: string | null } | null } | null, readonly relatedOffice: { readonly data: { readonly relatedOffice: string | null } | null } | null, readonly stakeholders: { readonly data: { readonly stakeholders: string | null } | null } | null, readonly award: { readonly data: { readonly award: string | null } | null } | null, readonly links: ReadonlyArray<{ readonly url: string | null, readonly display: string | null } | null> | null, readonly measure: { readonly name: string | null, readonly topic: { readonly name: string | null } | null } | null, readonly evaluation: { readonly accessibility: { readonly description: string | null, readonly percent: number | null } | null, readonly effectiveness: { readonly percent: number | null, readonly description: string | null } | null, readonly effort: { readonly percent: number | null, readonly description: string | null } | null, readonly execution: { readonly percent: number | null, readonly description: string | null } | null, readonly participation: { readonly description: string | null, readonly percent: number | null } | null, readonly synergies: { readonly percent: number | null, readonly description: string | null } | null, readonly portability: { readonly percent: number | null, readonly description: string | null } | null } | null } | null, readonly exampleList: { readonly nodes: ReadonlyArray<{ readonly slug: string | null }> } };

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type MeasureDetailsQueryVariables = Exact<{
  id: Scalars['String'];
}>;


type MeasureDetailsQuery = { readonly measure: { readonly name: string | null, readonly image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null, readonly description: { readonly data: { readonly description: string | null } | null } | null, readonly topic: { readonly name: string | null } | null, readonly examples: ReadonlyArray<{ readonly name: string | null, readonly slug: string | null, readonly description: { readonly data: { readonly description: string | null } | null } | null, readonly image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null> | null } | null };

type TopicDetailsQueryVariables = Exact<{
  id: Scalars['String'];
}>;


type TopicDetailsQuery = { readonly topic: { readonly name: string | null, readonly image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null, readonly description: { readonly data: { readonly description: string | null } | null } | null, readonly measures: ReadonlyArray<{ readonly name: string | null, readonly slug: string | null, readonly description: { readonly data: { readonly description: string | null } | null } | null, readonly image: { readonly localFile: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null } | null } | null> | null } | null };

type TopicMeasureTreeQueryVariables = Exact<{ [key: string]: never; }>;


type TopicMeasureTreeQuery = { readonly nestedMeasures: { readonly nodes: ReadonlyArray<{ readonly name: string | null, readonly slug: string | null, readonly measures: ReadonlyArray<{ readonly name: string | null, readonly slug: string | null } | null> | null }> } };

type TopicTeasersQueryVariables = Exact<{ [key: string]: never; }>;


type TopicTeasersQuery = { readonly topics: { readonly nodes: ReadonlyArray<{ readonly slug: string | null, readonly name: string | null, readonly description: { readonly data: { readonly description: string | null } | null } | null }> } };


}
